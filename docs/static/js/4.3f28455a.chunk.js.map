{"version":3,"sources":["pages/critterpedia/data.ts","pages/critterpedia/components/MonthPanels.tsx","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterDialogue.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/page.tsx"],"names":["getCritterName","critter","type","t","normal_name","getCritterQuote","playername","getCritterLocation","location","months","winter","theme","settings","hemisphere","palette","summer","spring","autumn","seasons","MonthPanel","props","useTheme","useTranslation","useNDContext","tooSmall","useMediaQuery","breakpoints","down","Grid","item","xs","Card","variant","style","backgroundColor","month","main","opacity","undefined","color","contrastText","borderColor","active","error","className","CardContent","paddingBottom","MonthPanels","container","range","map","i","activeMonth","TimeTracker","now","time","progress","getMilliseconds","getSeconds","getMinutes","getHours","marginBottom","Math","max","getTextWidth","useTwelveHourTime","pad","h12","h24","m","text","primary","hours","modelled","useStyles","makeStyles","createStyles","transparent","CritterDialogue","data","rotated","shadow","index","toString","padStart","name","capitalise","Dialog","open","onClose","setOpenDialogue","scroll","PaperProps","obtained","borderWidth","borderStyle","width","transition","Helmet","DialogTitle","Toolbar","IconButton","edge","onClick","direction","ChevronLeft","ChevronRight","disabled","textAlign","flexGrow","DialogContent","Divider","marginTop","dangerouslySetInnerHTML","__html","playerName","reduce","a","b","getMonth","sm","src","dry","title","WbSunny","rain","Cloud","value","price","DialogActions","FormControlLabel","control","Checkbox","checked","onChange","event","setObtained","target","label","setModelled","CritterPanel","activeNow","leavingSoon","searchParameters","activeRequired","priceComparison","size","stateRequired","match","includes","toLowerCase","filter","elem","join","CardActionArea","Warning","Help","Critterpedia","window","localStorage","critterpedia","bugs","fish","push","JSON","stringify","parse","React","useState","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","load","bugsData","setBugsDataImpl","fishData","setFishDataImpl","history","useHistory","setBugsData","bug","state","setFishData","maxWidth","margin","CardHeader","spacing","md","TextField","fullWidth","FormControl","InputLabel","id","Select","labelId","MenuItem","Trans","i18nKey","total","overflowX","paddingRight","y","x","myIndex","critterData"],"mappings":"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","file":"static/js/4.3f28455a.chunk.js","sourcesContent":["import { bugs, fish } from './data.json';\n\ntype Critter = typeof bugs[0] | typeof fish[0];\nexport type { Critter };\nexport {\n    getCritterName,\n    getCritterQuote,\n    getCritterLocation\n};\n\n\nfunction getCritterName(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.name.${critter.normal_name}`);\n}\n\nfunction getCritterQuote(critter: Critter, type: 'bug' | 'fish', playername: string, t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.quote.${critter.normal_name}`, { playername });\n}\n\nfunction getCritterLocation(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.location.${critter.location}`);\n}\n\n\n","import { Card, CardContent, Grid, Theme, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport { range } from \"../../../misc\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './MonthPanels.scss';\nconst months = [\n    \"core:time.month.jan\",\n    \"core:time.month.feb\",\n    \"core:time.month.mar\",\n    \"core:time.month.apr\",\n    \"core:time.month.may\",\n    \"core:time.month.jun\",\n    \"core:time.month.jul\",\n    \"core:time.month.aug\",\n    \"core:time.month.sep\",\n    \"core:time.month.oct\",\n    \"core:time.month.nov\",\n    \"core:time.month.dec\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('critterpedia');\n    const { settings } = useNDContext();\n    const tooSmall = useMediaQuery(theme.breakpoints.down('xs'));\n    return <Grid item xs={4}>\n        <Card\n            variant=\"outlined\"\n            style={{\n                backgroundColor: seasons[props.month](theme, settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n            }}\n            className=\"month-panel\"\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {t(months[props.month] + (tooSmall ? '.short' : '.long'))}\n            </CardContent>\n        </Card>\n    </Grid>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <Grid container>\n        {range(12).map(i =>\n            <MonthPanel\n                months={props.months}\n                month={i}\n                active={props.activeMonth == i}\n            />\n        )}\n    </Grid>;\n}","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNDContext } from '../../../context';\nimport { getTextWidth } from '../../../misc';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('core');\n    const { time: now, settings } = useNDContext();\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: Math.max(\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n            ) - 8,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 6,\n                            h24: 6,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 12,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 6,\n                            h24: 18,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, Grid, IconButton, makeStyles, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport { getCritterLocation, getCritterName, getCritterQuote } from \"../data\";\nimport { bugs, fish } from '../data.json';\nimport './CritterDialogue.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}));\n\ninterface CritterDialogueProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    open: boolean;\n    setOpenDialogue: (value: number | null) => void;\n}\nexport default function CritterDialogue(props: CritterDialogueProps) {\n    const { t } = useTranslation('critterpedia');\n    const { time, settings } = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            props.data.hours.rotated(6)\n    );\n    const theme = useTheme();\n    const { palette } = useTheme();\n    let shadow;\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    const index = props.data.index.toString().padStart(2, '0');\n    const name = getCritterName(props.data, props.type, t).capitalise();\n    return <>\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <Helmet>\n                <title>{t('critterpedia:title.info', { name })}</title>\n            </Helmet>\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {name}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {t(`critterpedia:dialogue.type.${props.type}`, { index: props.data.index + 1 })}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: getCritterQuote(\n                            props.data,\n                            props.type,\n                            settings.playerName,\n                            t\n                        )\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={time.getMonth()}\n                />\n                <TimeTracker\n                    hours={hours[time.getMonth()]}\n                />\n                <Card variant=\"outlined\">\n                    <>\n                        <Grid container>\n                            <Grid item xs={12} sm={6}>\n                                <img src={\n                                    `assets/${props.type}/${index}.png`\n                                } />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <div className=\"info\">\n                                    {props.data.dry && <div\n                                        className=\"dry\"\n                                        title={t('critterpedia:dialogue.details.dry')}\n                                    >\n                                        <WbSunny\n                                            style={{\n                                                color: theme.palette.summer.main\n                                            }}\n                                        />\n                                    </div>}\n                                    <div className=\"lfound\">{t('critterpedia:dialogue.details.found')}</div>\n                                    <div className=\"lsell\">{t('critterpedia:dialogue.details.price')}</div>\n                                    {props.data.rain && <div\n                                        className=\"rain\"\n                                        title={t('critterpedia:dialogue.details.rain')}\n                                    >\n                                        <Cloud\n                                            style={{\n                                                color: theme.palette.winter.main\n                                            }}\n                                        />\n                                    </div>}\n                                    <div className=\"found\">{getCritterLocation(props.data, props.type, t)}</div>\n                                    <div className=\"sell\">{t('core:money.value', { value: props.data.price })}</div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.obtained')}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            className={useStyles(theme).modelled}\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.modelled')}\n                />\n            </DialogActions>\n        </Dialog>\n    </>\n}","import { Card, CardActionArea, useTheme } from \"@material-ui/core\";\nimport { Help, Warning } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport { getCritterLocation, getCritterName } from '../data';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport CritterDialogue from \"./CritterDialogue\";\nimport './CritterPanel.scss';\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    searchParameters: SearchParameters;\n    open: boolean;\n    setOpenDialogue: (value: number | null) => void;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const { t } = useTranslation('critterpedia');\n    const { time, settings } = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            props.data.hours.rotated(6)\n    );\n    const theme = useTheme();\n    const activeNow = hours[time.getMonth()][time.getHours()];\n    const activeMonth = hours[time.getMonth()].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(time.getMonth() + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!getCritterLocation(props.data, props.type, t).includes(location.toLowerCase())) {\n        match = false;\n    } else if (!getCritterName(props.data, props.type, t).includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    const title = [\n        t(`critterpedia:panel.type.${props.type}`, { name: getCritterName(props.data, props.type, t).capitalise(), index: props.data.index + 1 }),\n        (activeMonth ? (leavingSoon ? t('critterpedia:panel.status.leaving_soon') : '') : t('critterpedia:panel.status.unavailable')),\n        (activeNow ? t('critterpedia:panel.status.now') : ''),\n        (props.modelled ? t('critterpedia:panel.status.modelled') : ''),\n        t('critterpedia:panel.status.details'),\n    ].filter((elem) => !!elem).join('\\n');\n\n    return <>\n        <Card\n            className=\"critter-panel\"\n            title={title}\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeMonth\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeMonth\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeMonth\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <CritterDialogue {...props} />\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router';\nimport { range } from '../../misc';\nimport CritterPanel from './components/CritterPanel';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    load?: { type: 'bug' | 'fish', index: number }\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const { t } = useTranslation('critterpedia');\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const { type, index } = props.load ?? { type: 'bug', index: null };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n\n    const history = useHistory();\n\n    function setOpenDialogue(type: 'bug' | 'fish', index: number | null) {\n        if (index === null) {\n            history.push('/critterpedia');\n        } else {\n            history.push(`/critterpedia/${type}/${index}`);\n        }\n    }\n\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    // const title = index !== null ? t('critterpedia:title.info', { name: t(`critterpedia:${type}.name.${(type === 'bug' ? bugs : fish)[index].normal_name}`).capitalise() }) : ;\n    return <>\n        <Helmet>\n            <title>{t('critterpedia:title.default')}</title>\n        </Helmet>\n        <div style={{ maxWidth: 1316, margin: 'auto' }}>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={t('critterpedia:search.title')} />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label={t('critterpedia:search.name')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label={t('critterpedia:search.location')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label={t('critterpedia:search.shadow')} />\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"comp-label\">{t('critterpedia:search.price.label')}</InputLabel>\n                                <Select\n                                    value={priceComparison}\n                                    onChange={(event) => setPriceComparison(\n                                        event.target.value as ('>=' | '=' | '<=')\n                                    )}\n                                    labelId='comp-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\">=\">{t('critterpedia:search.price.comp_values.ge')}</MenuItem>\n                                    <MenuItem value=\"=\">{t('critterpedia:search.price.comp_values.eq')}</MenuItem>\n                                    <MenuItem value=\"<=\">{t('critterpedia:search.price.comp_values.le')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label={t('critterpedia:search.price.value')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"active-label\">{t('critterpedia:search.active.title')}</InputLabel>\n                                <Select\n                                    value={activeRequired}\n                                    onChange={(event) => setActiveRequired(\n                                        event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                    )}\n                                    labelId='active-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.active.any')}</MenuItem>\n                                    <MenuItem value=\"month\">{t('critterpedia:search.active.month')}</MenuItem>\n                                    <MenuItem value=\"now\">{t('critterpedia:search.active.now')}</MenuItem>\n                                    <MenuItem value=\"until_next\">{t('critterpedia:search.active.until_next')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"state-label\">{t('critterpedia:search.state.title')}</InputLabel>\n                                <Select\n                                    value={stateRequired}\n                                    onChange={(event) => setStateRequired(\n                                        event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                    )}\n                                    labelId='state-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.state.any')}</MenuItem>\n                                    <MenuItem value=\"unobtained\">{t('critterpedia:search.state.unobtained')}</MenuItem>\n                                    <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.bugs\" t={t}>\n                        Bugs <span style={{ color: theme.palette.primary.main }}>\n                            ({\n                                {\n                                    obtained: bugsData.reduce(\n                                        (total, bug) => total + (+bug.obtained), 0),\n                                }\n                            } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                            ({\n                                {\n                                    modelled: bugsData.reduce(\n                                        (total, bug) => total + (+bug.modelled), 0),\n                                }\n                            } / 80)\n                    </span>\n                    </Trans>\n                } />\n                <CardContent style={{ overflowX: 'auto' }}>\n                    <table style={{ paddingRight: 16 }}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = bugsData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={bugs[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                type=\"bug\"\n                                                                setObtained={(value: boolean) => setBugsData(myIndex, { obtained: value, modelled: false })}\n                                                                setModelled={(value: boolean) => setBugsData(myIndex, { obtained: true, modelled: value })}\n                                                                open={type === 'bug' && index === myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('bug', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.fish\" t={t}>\n                        Fish <span style={{ color: theme.palette.primary.main }}>\n                            ({\n                                {\n                                    obtained: fishData.reduce(\n                                        (total, fish) => total + (+fish.obtained), 0),\n                                }\n                            } / 80)\n                        </span> <span style={{ color: theme.palette.modelled.main }}>\n                            ({\n                                {\n                                    modelled: fishData.reduce(\n                                        (total, fish) => total + (+fish.modelled), 0),\n                                }\n                            } / 80)\n                        </span>\n                    </Trans>\n                } />\n                <CardContent style={{ overflowX: 'auto' }}>\n                    <table style={{ paddingRight: 16 }}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = fishData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={fish[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                type=\"fish\"\n                                                                setObtained={(value: boolean) => setFishData(myIndex, { obtained: value, modelled: false })}\n                                                                setModelled={(value: boolean) => setFishData(myIndex, { obtained: true, modelled: value })}\n                                                                open={type === 'fish' && index == myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('fish', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n        </div>\n    </>\n}"],"sourceRoot":""}