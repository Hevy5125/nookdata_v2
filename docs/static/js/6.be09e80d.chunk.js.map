{"version":3,"sources":["pages/turnips/components/Chart/index.tsx","pages/turnips/data.ts","pages/turnips/page.tsx"],"names":["Chart","props","chart","chartElement","exportChart","bind","destroyChart","loadData","redraw","setChart","setChartElementRef","unloadData","updateConfig","this","updateChart","nextProps","isPure","a","b","aKeys","Object","keys","bKeys","length","index","key","shallowEqual","destroy","mimeType","onExported","undefined","console","error","export","preserveAspectRatio","data","load","flush","config","className","domProps","style","unloadBeforeLoad","bb","generate","bindto","element","unload","dataToLoad","name","value","ref","React","Component","displayName","getInstances","instance","Pattern","calculateFluctuatingHigh","calculateFluctuatingDec","calculateOneFluctuating","makeRange","min","max","base","avg","Math","ceil","rangeValid","range","CHANCE_FLUCTUATING","FLUCTUATING","LARGE_SPIKE","DECREASING","SMALL_SPIKE","UNKNOWN","AGGREGATE","buy","offset","prices","slice","all","map","price","lowestRate","highestRate","ranges","minRates","maxRates","recalculate","i","minRate","maxRate","push","categoryChance","chance","hi1","hi23","phase1","_dec1","dec2","dec1","phase2","hi3","phase3","phase4","phase5","pattern","hours","f","flattenData","mon","am","pm","tue","wed","thu","fri","sat","minPossibleData","maxPossibleData","dataMakesSense","zip","user","calculate","chanceFluctuating","previousPattern","flatData","flat","calculateFluctuating","emptyWeek","firstBuy","patternColours","Error","weekDays","Turnips","foundData","getDefault","window","localStorage","turnips","clone","useState","setDataImpl","confirmOpen","setConfirmOpen","dontAsk","setDontAsk","makesSense","result","log","columns","colours","names","n","column","hour","low","high","mid","setData","newData","toSet","deepmerge","JSON","stringify","reset","reduce","aggregate","next","t","useTranslation","theme","useTheme","isXs","useMediaQuery","breakpoints","up","Grid","item","xs","sm","FormControlLabel","control","Checkbox","checked","onChange","event","target","color","label","title","Helmet","pageTitle","maxWidth","margin","Card","CardHeader","CardContent","container","spacing","TextField","type","fullWidth","day","FormControl","InputLabel","id","Select","labelId","MenuItem","Button","height","variant","onClick","turnipDontConfirm","display","justifyContent","palette","main","paddingRight","Warning","Typography","colors","areaSplineRange","legend","show","Dialog","open","DialogTitle","DialogContent","DialogActions"],"mappings":"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","file":"static/js/6.be09e80d.chunk.js","sourcesContent":["import {\n    ArrayOrString, bb, Chart as BBChart, Data, PrimitiveArray\n} from 'billboard.js';\nimport 'billboard.js/dist/billboard.css';\nimport React from 'react';\nimport { Dict } from '../../../../misc';\nimport './dark.scss';\nimport { ChartProps } from './types';\n// lifted from react-billboardjs and modified to work in typescript\n/* MIT License\n\nCopyright (c) 2017 Tony Quetano\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. */\nfunction shallowEqual(a: Dict<any>, b: Dict<any>) {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    const length = aKeys.length;\n\n    if (length !== bKeys.length) {\n        return false;\n    }\n\n    let index = -1;\n\n    while (++index < length) {\n        const key = aKeys[index];\n\n        if (key !== bKeys[index] || a[key] !== b[key]) {\n            return false;\n        }\n    }\n\n    return true;\n}\nclass Chart extends React.Component<ChartProps> {\n    static displayName = 'Chart';\n    chart: BBChart | null;\n    chartElement: HTMLDivElement | null;\n\n    static getInstances = () => {\n        return bb.instance;\n    };\n\n    constructor(props: ChartProps) {\n        super(props);\n\n        this.chart = null;\n        this.chartElement = null;\n\n        // Explicit binds instead of arrow functions for lower memory footprint.\n        this.exportChart = this.exportChart.bind(this);\n        this.destroyChart = this.destroyChart.bind(this);\n        this.loadData = this.loadData.bind(this);\n        this.redraw = this.redraw.bind(this);\n        this.setChart = this.setChart.bind(this);\n        this.setChartElementRef = this.setChartElementRef.bind(this);\n        this.unloadData = this.unloadData.bind(this);\n        this.updateConfig = this.updateConfig.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateChart();\n    }\n\n    shouldComponentUpdate(nextProps: ChartProps) {\n        return !nextProps.isPure || !shallowEqual(this.props, nextProps);\n    }\n\n    componentDidUpdate() {\n        this.updateChart();\n    }\n\n    componentWillUnmount() {\n        this.destroyChart();\n    }\n\n    destroyChart() {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n\n        this.chart = null;\n    }\n\n    exportChart(mimeType: string, onExported: ((dataUrl: string) => string) | undefined = undefined) {\n        if (!this.chart) {\n            // eslint-disable-next-line no-console\n            return console.error('No chart is available to export.');\n        }\n\n        this.chart.export({ mimeType, preserveAspectRatio: true }, onExported);\n    }\n\n    loadData(data: Data) {\n        if (!this.chart) {\n            // eslint-disable-next-line no-console\n            return console.error(\n                'No chart is available to which data can be loaded. It may already have been destroyed, or has never been drawn.',\n            );\n        }\n\n        this.chart.load(data as {\n            url?: string;\n            json?: [{ [key: string]: string }];\n            rows?: PrimitiveArray[];\n            columns?: PrimitiveArray[];\n            data?: Array<{ [key: string]: number }>;\n            names?: { [key: string]: string };\n            xs?: { [key: string]: string };\n            classes?: { [key: string]: string };\n            categories?: string[];\n            axes?: { [key: string]: string | string[] };\n            colors?: { [key: string]: string };\n            headers?: { [key: string]: string };\n            keys?: { [key: string]: string };\n            mimeType?: string;\n            type?: string;\n            types?: { [key: string]: string };\n            unload?: boolean | ArrayOrString;\n            done?: () => any;\n        });\n    }\n\n    redraw() {\n        if (!this.chart) {\n            // eslint-disable-next-line no-console\n            return console.error('No chart is available to draw.');\n        }\n\n        this.chart.flush();\n    }\n\n    setChart(data: Data) {\n        if (this.chart) {\n            this.loadData(data);\n        } else {\n            const {\n                className: classNameIgnored,\n                domProps: domPropsIgnored,\n                isPure: isPureIgnored,\n                style: styleIgnored,\n                unloadBeforeLoad: unloadBeforeLoadIgnored,\n                ...config\n            } = this.props;\n\n            this.chart = bb.generate({\n                bindto: this.chartElement,\n                ...config,\n            });\n        }\n    }\n\n    setChartElementRef(element: HTMLDivElement) {\n        this.chartElement = element;\n    }\n\n    unloadData(data: any) {\n        if (!this.chart) {\n            // eslint-disable-next-line no-console\n            return console.error(\n                'No chart is available from which data can be unloaded. It may already have been destroyed, or has never been drawn.',\n            );\n        }\n\n        this.chart.unload(data);\n    }\n\n    updateChart() {\n        const { data, unloadBeforeLoad } = this.props;\n        const dataToLoad = unloadBeforeLoad ? { ...data, unload: true } : data;\n\n        this.setChart(dataToLoad);\n    }\n\n    updateConfig(name: string, value: any, redraw: boolean | undefined) {\n        if (!this.chart) {\n            // eslint-disable-next-line no-console\n            return console.error(\n                'You are trying to set the config a chart that does not exist.' +\n                'Have you passed `data`?',\n            );\n        }\n\n        return this.chart.config(name, value, redraw);\n    }\n\n    render() {\n        const { className, domProps, style } = this.props;\n\n        return (\n            <div\n                className={className}\n                style={style}\n                {...domProps}\n                ref={this.setChartElementRef}\n            />\n        );\n    }\n}\nexport default Chart;\n","import { all, Filter, range, zip } from \"../../misc\";\n\nexport enum Pattern {\n    FLUCTUATING,\n    LARGE_SPIKE,\n    DECREASING,\n    SMALL_SPIKE,\n    UNKNOWN,\n    AGGREGATE,\n}\n\ntype PatternDictionary = {\n    [K in Pattern]: number;\n};\n\nexport interface UserHourData {\n    am: number | null;\n    pm: number | null;\n}\n\nexport interface UserTurnipsData {\n    buy: number | null;\n    mon: UserHourData;\n    tue: UserHourData;\n    wed: UserHourData;\n    thu: UserHourData;\n    fri: UserHourData;\n    sat: UserHourData;\n    previousPattern: Pattern;\n    firstBuy: boolean;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n    avg: number;\n}\n\nexport interface TurnipsResult {\n    pattern: Filter<Pattern, Pattern.UNKNOWN>;\n    chance: number;\n    hours: Range[];\n}\n\nfunction makeRange(min: number, max: number, base: number) {\n    let avg = (min + max) / 2 * base + 0.5;  // just trust me, this should be right\n    min = Math.ceil(min * base);\n    max = Math.ceil(max * base);\n    return { min, max, avg };\n}\n\nfunction rangeValid(range: Range, value: number | null) {\n    return (value === null) || (range.min <= value && value <= range.max);\n}\n\ninterface TurnipsIntermediateResult {\n    pattern: Filter<Pattern, Pattern.UNKNOWN>;\n    chance: number;\n    hours: number[][];\n}\n\ntype FlatData = (number | null)[];\n\nfunction intermediateToResult(result: TurnipsIntermediateResult): TurnipsResult {\n    return {\n        pattern: result.pattern,\n        chance: result.chance,\n        hours: result.hours.map(\n            (points) => (\n                {\n                    min: Math.min(...points),\n                    max: Math.max(...points),\n                    avg: points.reduce((a, b) => a + b, 0) / points.length,\n                }\n            )\n        )\n    };\n}\n\nfunction aggregate(results: TurnipsIntermediateResult[]): TurnipsIntermediateResult {\n    return {\n        pattern: results.reduce((pattern, result) => result.pattern != pattern ? Pattern.AGGREGATE : result.pattern, results[0].pattern),\n        chance: results.reduce((chance, pattern) => chance + pattern.chance, 0),\n        hours: results.reduce(\n            (hours: number[][], result): number[][] => hours.map(\n                (prices, index) => [...prices, ...result.hours[index]]\n            ),\n            [[], [], [], [], [], [], [], [], [], [], [], []]\n        ),\n    };\n}\n\nconst CHANCE_FLUCTUATING: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.2,\n    [Pattern.LARGE_SPIKE]: 0.5,\n    [Pattern.DECREASING]: 0.25,\n    [Pattern.SMALL_SPIKE]: 0.45,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nconst CHANCE_LARGE_SPIKE: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.3,\n    [Pattern.LARGE_SPIKE]: 0.05,\n    [Pattern.DECREASING]: 0.45,\n    [Pattern.SMALL_SPIKE]: 0.25,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nconst CHANCE_DECREASING: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.15,\n    [Pattern.LARGE_SPIKE]: 0.2,\n    [Pattern.DECREASING]: 0.05,\n    [Pattern.SMALL_SPIKE]: 0.15,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nconst CHANCE_SMALL_SPIKE: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.35,\n    [Pattern.LARGE_SPIKE]: 0.25,\n    [Pattern.DECREASING]: 0.25,\n    [Pattern.SMALL_SPIKE]: 0.15,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nfunction* calculateFluctuatingHigh(buy: number, data: FlatData, offset: number, length: number) {\n    let range = makeRange(0.9, 1.4, buy);\n    let prices = data.slice(offset, offset + length);\n    if (!all(prices.map((price) => (rangeValid(range, price))))) {\n        return;\n    }\n    yield prices.map((price) => (price ? { min: price, max: price, avg: price } : range));\n}\n\nfunction lowestRate(buy: number, price: number) {\n    return (price - 1) / buy;\n}\nfunction highestRate(buy: number, price: number) {\n    return price / buy;\n}\n\nfunction* calculateFluctuatingDec(buy: number, data: FlatData, offset: number, length: 2 | 3) {\n    let prices = data.slice(offset, offset + length);\n    let ranges: Range[] = [];\n    let minRates = [0.6];\n    let maxRates = [0.8];\n    let recalculate = false;\n    for (let i = 0; i < length; i++) {\n        let price = prices[i]\n        if (price) {\n            let minRate = lowestRate(buy, price);\n            let maxRate = highestRate(buy, price);\n            if (maxRate < minRates[i] || minRate > maxRates[i]) {\n                return;  // impossible pattern\n            }\n            ranges.push({ min: price, max: price, avg: price });\n            minRates[i] = minRate;\n            maxRates[i] = maxRate;\n            recalculate = true;  // need to ensure previous values make sense\n        } else {\n            ranges.push(makeRange(minRates[i], maxRates[i], buy));\n        }\n        minRates.push(minRates[i] - 0.1);\n        maxRates.push(maxRates[i] - 0.04);\n    }\n    if (recalculate) {\n        // make sure previous values make sense\n        for (let i = length - 2; i >= 0; i--) {\n            if (minRates[i] < minRates[i + 1]) {\n                minRates[i] = minRates[i + 1] + 0.04;  // increment it the smallest amount to be valid\n                ranges[i].min = Math.ceil(minRates[i] * buy);\n                ranges[i].avg = (minRates[i] + maxRates[i]) / 2 * buy;\n            }\n        }\n    }\n    yield ranges;\n}\n\nfunction* calculateOneFluctuating(categoryChance: number, buy: number, data: FlatData) {\n    // generator abuse!!!!\n    const chance = categoryChance / (\n        7 // hi1 and hi23\n        * 2 // dec1 and dec2\n    )\n    for (let hi1 = 0; hi1 <= 6; hi1++) {\n        const hi23 = 7 - hi1;\n        for (let phase1 of calculateFluctuatingHigh(buy, data, 1, hi1)) {\n            for (let _dec1 of [2, 3]) {\n                const dec1 = _dec1 as (2 | 3);\n                const dec2 = 5 - dec1 as (2 | 3);\n                for (let phase2 of calculateFluctuatingDec(buy, data, 1 + hi1, dec1)) {\n                    for (let hi3 = 0; hi3 < hi23; hi3++) {\n                        for (let phase3 of calculateFluctuatingHigh(buy, data, 1 + hi1 + dec1, hi23 - hi3)) {\n                            for (let phase4 of calculateFluctuatingDec(buy, data, 8 + dec1 - hi3, dec2)) {\n                                for (let phase5 of calculateFluctuatingHigh(buy, data, 13 - hi3, hi3)) {\n                                    yield {\n                                        pattern: Pattern.FLUCTUATING,\n                                        chance: chance / hi23,\n                                        hours: [{ min: buy, max: buy, avg: buy }, ...phase1, ...phase2, ...phase3, ...phase4, ...phase5]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction calculateFluctuating(categoryChance: number, data: FlatData) {\n    if (data[0] !== null) {\n        return [...calculateOneFluctuating(categoryChance, data[0], data)];\n    }\n    return range(90, 111).map(i => [...calculateOneFluctuating(categoryChance / 20, i, data)]).flat();\n}\n\nfunction calculateOneLargeSpike(categoryChance: number, data: FlatData) {\n    //\n    return [];\n}\n\nfunction calculateLargeSpike(categoryChance: number, data: FlatData) {\n    //\n    return [];\n}\n\nfunction calculateOneDecreasing(categoryChance: number, data: FlatData) {\n    //\n    return [];\n}\n\nfunction calculateDecreasing(categoryChance: number, data: FlatData) {\n    //\n    return [];\n}\n\nfunction calculateOneSmallSpike(categoryChance: number, data: FlatData) {\n    //\n    return [];\n}\n\nfunction calculateSmallSpike(categoryChance: number, data: FlatData) {\n    //\n    return [];\n}\n\nfunction flattenData(data: UserTurnipsData): FlatData {\n    return [\n        data.buy,\n        data.mon.am,\n        data.mon.pm,\n        data.tue.am,\n        data.tue.pm,\n        data.wed.am,\n        data.wed.pm,\n        data.thu.am,\n        data.thu.pm,\n        data.fri.am,\n        data.fri.pm,\n        data.sat.am,\n        data.sat.pm,\n    ];\n}\nconst minPossibleData = [90, 36, 32, 27, 23, 18, 14, 9, 27, 23, 18, 14, 9];\nconst maxPossibleData = [110, 154, 154, 220, 660, 660, 660, 660, 660, 660, 660, 220, 219];\nexport function dataMakesSense(data: UserTurnipsData): boolean {\n    for (let [min, max, user] of zip(minPossibleData, maxPossibleData, flattenData(data))) {\n        if (user === null) {\n            continue;\n        }\n        if (user < min || user > max) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function calculate(data: UserTurnipsData): TurnipsResult[] {\n    if (!dataMakesSense(data)) {\n        return [];\n    }\n    let chanceFluctuating = CHANCE_FLUCTUATING[data.previousPattern];\n    let chanceLargeSpike = CHANCE_FLUCTUATING[data.previousPattern];\n    let chanceDecreasing = CHANCE_FLUCTUATING[data.previousPattern];\n    let chanceSmallSpike = CHANCE_FLUCTUATING[data.previousPattern];\n    let flatData = flattenData(data);\n    let result = [\n        ...calculateFluctuating(chanceFluctuating, flatData),\n        ...calculateLargeSpike(chanceLargeSpike, flatData),\n        ...calculateDecreasing(chanceDecreasing, flatData),\n        ...calculateSmallSpike(chanceSmallSpike, flatData),\n    ]\n    // result.push(aggregate(result));\n    return result;\n}\n\nexport const emptyWeek: UserTurnipsData = {\n    buy: null,\n    mon: { am: null, pm: null },\n    tue: { am: null, pm: null },\n    wed: { am: null, pm: null },\n    thu: { am: null, pm: null },\n    fri: { am: null, pm: null },\n    sat: { am: null, pm: null },\n    previousPattern: Pattern.UNKNOWN,\n    firstBuy: false,\n};\n\nexport const patternColours = {\n    [Pattern.AGGREGATE]: (chance: number) => `rgba(255, 255, 255, ${chance})`,\n    [Pattern.FLUCTUATING]: (chance: number) => `rgba(255, 0, 0, ${chance})`,\n    [Pattern.LARGE_SPIKE]: (chance: number) => `rgba(0, 255, 0, ${chance})`,\n    [Pattern.DECREASING]: (chance: number) => `rgba(0, 255, 255, ${chance})`,\n    [Pattern.SMALL_SPIKE]: (chance: number) => `rgba(127, 0, 255, ${chance})`,\n    [Pattern.UNKNOWN]: (chance: number) => { throw new Error('wtf') },\n}\n\n","import { Button, Card, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select, TextField, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { Warning } from \"@material-ui/icons\";\n// import Chart from 'react-billboardjs';\nimport { areaSplineRange } from 'billboard.js';\nimport deepmerge from \"deepmerge\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useTranslation } from \"react-i18next\";\nimport { Centred } from '../../components';\nimport { clone, DeepPartial, Dict, getDefault } from \"../../misc\";\nimport { Chart } from './components';\nimport { calculate, dataMakesSense, emptyWeek, Pattern, patternColours, UserTurnipsData } from \"./data\";\n\nconst weekDays: ('mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat')[] = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\nconst names = {\n    [Pattern.FLUCTUATING]: \"turnips:pattern.fluctuating\",\n    [Pattern.LARGE_SPIKE]: \"turnips:pattern.large_spike\",\n    [Pattern.DECREASING]: \"turnips:pattern.decreasing\",\n    [Pattern.SMALL_SPIKE]: \"turnips:pattern.small_spike\",\n    [Pattern.AGGREGATE]: \"turnips:pattern.aggregate\",\n}\n\nexport default function Turnips() {\n    const foundData = getDefault(window.localStorage.turnips, clone(emptyWeek));\n    const [data, setDataImpl] = React.useState(foundData);\n    const [confirmOpen, setConfirmOpen] = React.useState(false);\n    const [dontAsk, setDontAsk] = React.useState(false);\n    const makesSense = dataMakesSense(data);\n    const result = makesSense ? (console.log('calculating'), calculate(data)) : [];\n    console.log(result.length && 'hello');\n    let columns: [string, ...{ high: number, low: number, mid: number }[]][] = [];\n    let colours: Dict<string> = {}\n    let names: Dict<string> = {}\n    let n = 0;\n    for (let pattern of result) {\n        let column: [string, ...{ high: number, low: number, mid: number }[]] = [`data${n}`];\n        for (let hour of pattern.hours) {\n            column.push({ low: hour.min, high: hour.max, mid: hour.avg });\n        }\n        columns.push(column);\n        names[`data${n}`] = names[pattern.pattern];\n        colours[`data${n++}`] = patternColours[pattern.pattern](pattern.chance);\n    }\n    console.log(result);\n    function confirm() {\n        if (dontAsk) {\n            window.localStorage.turnipDontConfirm = 'true';\n        }\n        setConfirmOpen(false);\n        reset();\n    }\n    function setData(newData: DeepPartial<UserTurnipsData>) {\n        let toSet: UserTurnipsData = deepmerge<UserTurnipsData>(data, newData as Partial<UserTurnipsData>);\n        window.localStorage.turnips = JSON.stringify(toSet);\n        setDataImpl(toSet);\n    }\n    function nextWeek() {\n        if (getDefault<boolean>(window.localStorage.turnipDontConfirm, false)) {\n            reset();\n        } else {\n            setConfirmOpen(true);\n        }\n    }\n    function reset() {\n        let newData = clone(emptyWeek);\n        newData.previousPattern = result.map((result) => result.pattern).reduce((aggregate, next) => {\n            if (aggregate === Pattern.UNKNOWN) {\n                return Pattern.UNKNOWN;\n            }\n            if (aggregate === Pattern.AGGREGATE) {\n                return next;\n            }\n            if (next === Pattern.AGGREGATE) {\n                return aggregate;\n            }\n            if (aggregate !== next) {\n                return Pattern.UNKNOWN;\n            } else {\n                return next;\n            }\n        }, Pattern.UNKNOWN);\n        setData(newData);\n    }\n    const { t } = useTranslation(['core', 'turnips']);\n    const theme = useTheme();\n    const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n    const firstBuy = <Grid item xs={12} sm={6}>\n        <Centred>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={data.firstBuy}\n                        onChange={(event) => setData({ firstBuy: event.target.checked })}\n                        color=\"primary\"\n                    />\n                }\n                label={t('turnips:prices.first_buy.checkbox')}\n                title={t('turnips:prices.first_buy.hover')}\n            />\n        </Centred>\n    </Grid>;\n    return <>\n        <Helmet>\n            <title>{t('core:title.browser.page', { pageTitle: t('core:pages.turnips') })}</title>\n        </Helmet>\n        <div style={{ maxWidth: 800, margin: 'auto' }}>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={t('turnips:prices.title')} />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        {isXs && firstBuy}\n                        <Grid item xs={12} sm={6}>\n                            <TextField type=\"number\" fullWidth value={data.buy} onChange={(event) => setData({ buy: event.target.value ? +event.target.value : null })} label={t('turnips:prices.buy')} />\n                        </Grid>\n                        {!isXs && firstBuy}\n                        {weekDays.map((day) => (\n                            <>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField type=\"number\" fullWidth value={data[day].am} onChange={(event) => setData({ [day]: { am: event.target.value ? +event.target.value : null } })} label={t('turnips:prices.am', { day: t(`core:time.weekday.${day}.long`) })} />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField type=\"number\" fullWidth value={data[day].pm} onChange={(event) => setData({ [day]: { pm: event.target.value ? +event.target.value : null } })} label={t('turnips:prices.pm', { day: t(`core:time.weekday.${day}.long`) })} />\n                                </Grid>\n                            </>\n                        ))}\n                        <Grid item xs={12} sm={6}>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"comp-label\">{t('turnips:pattern.label')}</InputLabel>\n                                <Select\n                                    value={data.previousPattern}\n                                    onChange={(event) => setData(\n                                        { previousPattern: event.target.value as Pattern }\n                                    )}\n                                    labelId='pattern-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value={Pattern.SMALL_SPIKE}>{t('turnips:pattern.small_spike')}</MenuItem>\n                                    <MenuItem value={Pattern.LARGE_SPIKE}>{t('turnips:pattern.large_spike')}</MenuItem>\n                                    <MenuItem value={Pattern.FLUCTUATING}>{t('turnips:pattern.fluctuating')}</MenuItem>\n                                    <MenuItem value={Pattern.DECREASING}>{t('turnips:pattern.decreasing')}</MenuItem>\n                                    <MenuItem value={Pattern.UNKNOWN}>{t('turnips:pattern.unknown')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Button style={{ height: '100%' }} fullWidth variant=\"contained\" color=\"primary\" onClick={nextWeek}>{t('turnips:ui.start_next')}</Button>\n                        </Grid>\n                    </Grid>\n                    {makesSense || <>\n                        <br />\n                        <Centred>\n                            <div\n                                style={{\n                                    display: 'inline-flex',\n                                    justifyContent: 'center',\n                                    height: '100%',\n                                    color: theme.palette.error.main,\n                                    paddingRight: 8\n                                }}\n                            >\n                                <Warning />\n                            </div>\n                            <Typography color=\"error\">{t('turnips:ui.bad_data')}</Typography>\n                        </Centred>\n                    </>\n                    }\n                </CardContent>\n            </Card>\n            {!!result.length && <Card style={{ margin: 16 }}>\n                <CardContent>\n                    <Chart\n                        isPure\n                        className={`chart ${theme.name}`}\n                        data={{\n                            columns: columns as any,\n                            colors: colours,\n                            names,\n                            type: areaSplineRange(),\n                        }}\n                        legend={{\n                            // position: 'right',\n                            show: false\n                        }}\n                    />\n                </CardContent>\n            </Card>}\n        </div>\n        <Dialog open={confirmOpen}>\n            <DialogTitle>{t('turnips:ui.reset_dialogue.title')}</DialogTitle>\n            <DialogContent>\n                {t('turnips:ui.reset_dialogue.text')}\n                <br />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={dontAsk}\n                            onChange={(event) => setDontAsk(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('core:ui.dont_ask')}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setConfirmOpen(false)}>\n                    {t('core:ui.cancel')}\n                </Button>\n                <Button onClick={confirm}>\n                    {t('core:ui.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </>;\n}"],"sourceRoot":""}