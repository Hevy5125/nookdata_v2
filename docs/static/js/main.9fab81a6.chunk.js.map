{"version":3,"sources":["components/InfoDialogue.tsx","components/LanguageDialogue.tsx","components/AppBar.tsx","components/NavigationDrawer.tsx","components/UpdateReadyDialogue.tsx","components/WorksOfflineDialogue.tsx","i18n.ts","pages/critterpedia/index.ts","serviceWorkerRegistration.ts","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx","context.ts","prototype_mods.ts"],"names":["gitInfo","InfoDialogue","props","t","useTranslation","theme","useTheme","Dialog","open","onClose","setOpen","DialogTitle","DialogContent","Trans","i18nKey","style","color","palette","primary","main","gitRevision","commit","shortHash","DialogActions","Button","onClick","LanguageDialogue","aria-labelledby","PaperProps","width","textAlign","id","List","ListItem","button","setLang","ListItemText","AppBar","i18n","React","useState","langOpen","setLangOpen","infoOpen","setInfoOpen","position","Toolbar","IconButton","edge","aria-label","marginRight","setDrawerOpen","drawerOpen","flexGrow","title","Info","Language","window","localStorage","setTheme","value","changeLanguage","NavigationDrawer","container","undefined","document","body","Hidden","smUp","Drawer","variant","anchor","direction","children","xsDown","UpdateReadyDialogue","WorksOfflineDialogue","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","process","interpolation","escapeValue","supportedLngs","ns","defaultNS","lazy","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","commonProps","MuiTextField","MuiSelect","MuiFormControl","MuiDialogTitle","createMuiTheme","type","opacity","elevations","0","1","2","3","4","6","8","12","16","24","modelled","transparent","winter","contrastText","spring","summer","autumn","dark","secondary","background","paper","default","text","hint","disabled","zIndex","appBar","overrides","MuiAppBar","colorPrimary","backgroundColor","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","borderWidth","borderColor","borderStyle","MuiCardHeader","paddingBottom","MuiListItemIcon","themes","light","homepage","pageData","icon","EmojiNature","DrawerAdjust","matches","useMediaQuery","breakpoints","up","paddingLeft","active","transition","ListItemLink","to","exact","renderLink","useMemo","forwardRef","itemProps","ref","activeClassName","component","ListItemIcon","AppFrame","startOpen","initialRender","setInitialRender","Typography","display","Object","entries","map","route","data","timeUpdateId","sentinelDate","Date","Loading","autoPlay","loop","muted","playsInline","className","src","valueOr","defaultValue","rv","isNaN","booleanOr","App","themeSetting","chosenTheme","setChosenThemeImpl","nameSetting","playerName","chosenName","islandNameSetting","islandName","chosenIslandName","hemisphereSetting","hemisphere","chosenHemisphere","offsetSetting","timeOffset","chosenOffset","systemTimeSetting","useSystemTime","chosenSystemTime","twelveHourTimeSetting","useTwelveHourTime","chosenTwelveHourTime","settings","time","setTime","clearInterval","setInterval","getTheme","updateReady","setUpdateReady","worksOffline","setWorksOffline","serviceWorkerRegistration","_","ThemeProvider","CssBaseline","classList","add","setTimeout","remove","fallback","path","render","params","index","load","ReactDOM","basename","getElementById","defaultSettings","NDContext","createContext","NDContextProvider","createElement","Provider","useNDContext","useContext","String","prototype","capitalise","this","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/main.9fab81a6.chunk.js","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport GitInfo from 'react-git-info/macro';\nimport { Trans, useTranslation } from 'react-i18next';\n\nconst gitInfo = GitInfo();\n\ninterface InfoDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function InfoDialogue(props: InfoDialogueProps) {\n    const { t } = useTranslation('core');\n    const theme = useTheme();\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>\n            {t('core:info.title')}\n        </DialogTitle>\n        <DialogContent>\n            <Trans i18nKey=\"core:info.description\" t={t}>\n                You are currently viewing NookData revision\n                <span style={{ color: theme.palette.primary.main }}>\n                    {{ gitRevision: gitInfo.commit.shortHash }}\n                </span>\n            </Trans>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => props.setOpen(false)}>\n                {t('core:button.dismiss')}\n            </Button>\n        </DialogActions>\n    </Dialog>\n}","import { Dialog, DialogTitle, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LanguageDialogueProps {\n    open: boolean;\n    setLang: (lang: string) => void;\n}\n\nexport default function LanguageDialogue(props: LanguageDialogueProps) {\n    const { t } = useTranslation('core');\n    return <Dialog aria-labelledby=\"lang-dialogue-title\" open={props.open} PaperProps={{ style: { width: 250 } }}>\n        <DialogTitle style={{ textAlign: 'center' }} id=\"lang-dialogue-title\">{t('core:lang.choose')}</DialogTitle>\n        <List>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('en')}>\n                <ListItemText primary={t('core:lang.en')} />\n            </ListItem>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('fr')}>\n                <ListItemText primary={t('core:lang.fr')} />\n            </ListItem>\n        </List>\n    </Dialog>;\n}","import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport { Info, Language } from '@material-ui/icons';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport InfoDialogue from './InfoDialogue';\nimport LanguageDialogue from './LanguageDialogue';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    const { t, i18n } = useTranslation('core');\n    const [langOpen, setLangOpen] = React.useState(false);\n    const [infoOpen, setInfoOpen] = React.useState(false);\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    <IconButton color=\"inherit\" onClick={() => setInfoOpen(true)}>\n                        <Info />\n                    </IconButton>\n                    <IconButton color=\"inherit\" onClick={() => setLangOpen(true)}>\n                        <Language />\n                    </IconButton>\n                    {props.theme == 'light'\n                        ? <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'dark';\n                                    props.setTheme('dark')\n                                }\n                            }><DarkModeIcon /></IconButton>\n                        : <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'light';\n                                    props.setTheme('light')\n                                }\n                            }><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n            <LanguageDialogue open={langOpen} setLang={(value: string) => {\n                i18n.changeLanguage(value);\n                setLangOpen(false);\n            }} />\n            <InfoDialogue open={infoOpen} setOpen={setInfoOpen} />\n        </>\n    )\n}\nexport default AppBar;\n","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface UpdateReadyDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function UpdateReadyDialogue(props: UpdateReadyDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_update.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_update.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface WorksOfflineDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function WorksOfflineDialogue(props: WorksOfflineDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_offline.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_offline.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: { loadPath: '/nookdata_v2/assets/i18n/{{lng}}/{{ns}}.json' },\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV == 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        supportedLngs: [\n            'en',\n            'fr',\n        ],\n        ns: 'core',\n        defaultNS: 'core',\n    });","import { lazy } from 'react';\nexport default lazy(() => import('./page'));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n    MuiDialogTitle: {\n        style: { textAlign: 'center' },\n    }\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","import { CssBaseline, List, ListItem, ListItemIcon, ListItemText, ThemeProvider, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, NavLink, NavLinkProps, Redirect } from 'react-router-dom';\nimport { homepage } from '../package.json';\nimport AppBar from './components/AppBar';\nimport NavigationDrawer from './components/NavigationDrawer';\nimport UpdateReadyDialogue from './components/UpdateReadyDialogue';\nimport WorksOfflineDialogue from './components/WorksOfflineDialogue';\nimport { NDContextProvider } from './context';\nimport './i18n';\nimport './index.scss';\nimport { Dict } from './misc';\nimport Critterpedia from './pages/critterpedia';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? homepage : 'http://localhost:3000/nookdata_v2';\nconst root = '/nookdata_v2';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nconst pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'core:pages.critterpedia',\n        icon: <EmojiNature />,\n    },\n    // '/': {\n    //     title: 'Home',\n    //     icon: <EmojiNature />,\n    // },\n}\n\n\ninterface DrawerAdjustProps {\n    active: boolean,\n    children: React.ReactNode;\n}\nfunction DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    )\n}\n\ninterface ListItemLinkProps {\n    icon?: React.ReactNode;\n    primary: string;\n    to: string;\n    exact?: boolean;\n}\nfunction ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, exact } = props;\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef<any, Omit<NavLinkProps, 'to'>>((itemProps, ref) => (\n                <NavLink to={to} ref={ref} {...itemProps} activeClassName=\"Mui-selected\" exact={exact} />\n            )),\n        [to],\n    );\n    return <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n    </ListItem>;\n}\n\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    children: React.ReactNode;\n}\nfunction AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [initialRender, setInitialRender] = React.useState(true);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (startOpen && initialRender) {\n        setDrawerOpen(true);\n        setInitialRender(false);\n    }\n    const { t } = useTranslation('core');\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={\n                <Typography variant=\"h6\">\n                    <div\n                        style={{\n                            color: theme.palette.winter.main,\n                            display: 'inline'\n                        }}>{t('title.a')}</div>\n                    <div\n                        style={{\n                            color: theme.palette.summer.main,\n                            display: 'inline'\n                        }}>{t('title.b')}</div>\n                </Typography>\n            } />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItemLink to={route} icon={data.icon} primary={t(data.title)} />\n                    ))}\n                </List>\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    )\n}\n\n// interface RouteProps {\n//     page: string;\n//     route: string;\n//     children: React.ReactNode;\n// }\n// function Route(props: RouteProps) {\n//     const { t } = useTranslation('core');\n//     if (props.page.split('?')[0] !== props.route) {\n//         return null;\n//     }\n//     document.title = t('core:title.browser.page', { pageTitle: t(pageData[props.route].title) });\n//     return <>\n//         {props.children}\n//     </>;\n// }\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction Loading() {\n    // return <img\n    //     src=\"assets/shared/loading.gif\"\n    //     style={{ width: '20%', height: '20%', margin: '15% 40%', borderRadius: '50%' }}\n    // />;\n    // return <div className=\"loader\"></div>\n    return <video autoPlay loop muted playsInline className=\"loader\">\n        <source src=\"assets/shared/loading.webm\" type=\"video/webm\" />\n        <source src=\"assets/shared/loading.mp4\" type=\"video/mp4\" />\n    </video>;\n}\n\nfunction valueOr(data: String | undefined, defaultValue: number) {\n    let rv = data ? +data : defaultValue;\n    if (!isNaN(rv)) {\n        return rv;\n    } else {\n        return defaultValue;\n    }\n}\nfunction booleanOr(data: String | undefined, defaultValue: boolean) {\n    switch (data) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            return defaultValue;\n    }\n}\n\nfunction App() {\n    const { t } = useTranslation('core');\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setTimeout(() => setChosenThemeImpl(value), 10);\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 20);\n    }\n    const nameSetting: string = window.localStorage.playerName || 'PLAYER';\n    const [chosenName, setChosenNameImpl] = React.useState(nameSetting);\n    function setChosenName(value: string) {\n        window.localStorage.playerName = value;\n        setChosenNameImpl(value);\n    }\n    const islandNameSetting: string = window.localStorage.islandName || 'ISLAND';\n    const [chosenIslandName, setChosenIslandNameImpl] = React.useState(islandNameSetting);\n    function setChosenIslandName(value: string) {\n        window.localStorage.islandName = value;\n        setChosenIslandNameImpl(value);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphereImpl] = React.useState<'north' | 'south'>(hemisphereSetting);\n    function setChosenHemisphere(value: 'north' | 'south') {\n        window.localStorage.hemisphere = value;\n        setChosenHemisphereImpl(value);\n    }\n    const offsetSetting: number = valueOr(window.localStorage.timeOffset, 0);\n    const [chosenOffset, setChosenOffsetImpl] = React.useState(offsetSetting);\n    function setChosenOffset(value: number) {\n        window.localStorage.timeOffset = value;\n        setChosenOffsetImpl(value);\n    }\n    const systemTimeSetting: boolean = booleanOr(window.localStorage.useSystemTime, true);\n    const [chosenSystemTime, setChosenSystemTimeImpl] = React.useState(systemTimeSetting);\n    function setChosenSystemTime(value: boolean) {\n        window.localStorage.useSystemTime = value;\n        setChosenSystemTimeImpl(value);\n    }\n    const twelveHourTimeSetting: boolean = booleanOr(window.localStorage.useTwelveHourTime, false);\n    const [chosenTwelveHourTime, setChosenTwelveHourTimeImpl] = React.useState(twelveHourTimeSetting);\n    function setChosenTwelveHourTime(value: boolean) {\n        window.localStorage.useTwelveHourTime = value;\n        setChosenTwelveHourTimeImpl(value);\n    }\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: chosenIslandName,\n        playerName: chosenName,\n        timeOffset: chosenOffset,\n        useSystemTime: chosenSystemTime,\n        useTwelveHourTime: chosenTwelveHourTime,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    const [updateReady, setUpdateReady] = React.useState(false);\n    const [worksOffline, setWorksOffline] = React.useState(false);\n    serviceWorkerRegistration.register({ onUpdate: _ => setUpdateReady(true), onSuccess: _ => setWorksOffline(true) });\n    return <ThemeProvider theme={theme}>\n        <NDContextProvider time={time} settings={settings}>\n            <CssBaseline />\n            <AppFrame theme={chosenTheme} setTheme={setChosenTheme}>\n                <Suspense fallback={<Loading />}>\n                    <Switch>\n                        {/* <Route exact path=\"/\">\n                            Hello world!\n                        </Route> */}\n                        <Route path=\"/critterpedia/:type/:index\" render={({ match }) => {\n                            let type = match.params.type;\n                            let index = valueOr(match.params.index, -1);\n                            if (!(type === 'bug' || type === 'fish') || index < 0 || index > 79) {\n                                return <Redirect to=\"/critterpedia\" />\n                            }\n                            return <Critterpedia load={{ type, index }} />\n                        }}>\n                        </Route>\n                        <Route path=\"/critterpedia\" exact>\n                            <Critterpedia />\n                        </Route>\n                        <Route path=\"/critterpedia\">\n                            <Redirect to=\"/critterpedia\" />\n                        </Route>\n                        <Route path=\"/loading\">\n                            <Loading />\n                        </Route>\n                    </Switch>\n                    {/* <Route page={page} route=\"/\">\n                    <Loading />\n                </Route> */}\n                </Suspense>\n            </AppFrame>\n            <WorksOfflineDialogue open={worksOffline} setOpen={setWorksOffline} />\n            <UpdateReadyDialogue open={updateReady} setOpen={setUpdateReady} />\n        </NDContextProvider>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <Suspense fallback={<Loading />}>\n        <BrowserRouter basename={root}>\n            <App />\n        </BrowserRouter>\n    </Suspense>,\n    document.getElementById('root')\n);\nexport { };\n","import React, { useContext } from \"react\";\nimport UserSettings from \"./user_settings\";\n\ninterface INDContext {\n    time: Date;\n    settings: UserSettings;\n};\nlet defaultSettings: INDContext = {\n    time: new Date(),\n    settings: {\n        theme: 'dark',\n        hemisphere: 'north',\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n}\nexport const NDContext = React.createContext<INDContext>(defaultSettings);\nexport function NDContextProvider({ time, settings, children }: INDContext & { children: React.ReactElement[] }) {\n    const value = { time, settings };\n    return React.createElement(\n        NDContext.Provider,\n        { value },\n        children,\n    )\n}\nexport function useTime() {\n    const { time } = useContext(NDContext);\n    return time;\n}\nexport function useSettings() {\n    const { settings } = useContext(NDContext);\n    return settings;\n}\nexport function useNDContext() {\n    return useContext(NDContext);\n}\n","declare global {\n    interface String {\n        capitalise: () => String;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n"],"sourceRoot":""}