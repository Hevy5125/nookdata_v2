{"version":3,"sources":["../node_modules/deepmerge/dist/cjs.js","pages/turnips/data.ts","pages/turnips/page.tsx"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","reduce","prev","next","deepmerge_1","module","exports","Pattern","FLUCTUATING","LARGE_SPIKE","DECREASING","SMALL_SPIKE","UNKNOWN","AGGREGATE","emptyWeek","buy","mon","am","pm","tue","wed","thu","fri","sat","previousPattern","firstBuy","weekDays","Turnips","foundData","getDefault","window","localStorage","turnips","React","useState","data","setDataImpl","confirmOpen","setConfirmOpen","dontAsk","setDontAsk","setData","newData","toSet","JSON","stringify","result","reset","pattern","aggregate","t","useTranslation","theme","useTheme","isXs","useMediaQuery","breakpoints","up","Grid","item","xs","sm","FormControlLabel","control","Checkbox","checked","onChange","event","color","label","title","Helmet","pageTitle","style","maxWidth","margin","Card","CardHeader","CardContent","container","spacing","TextField","type","fullWidth","day","FormControl","InputLabel","id","Select","labelId","MenuItem","Button","height","variant","onClick","turnipDontConfirm","Dialog","open","DialogTitle","DialogContent","DialogActions"],"mappings":"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","file":"static/js/5.e4b95e9a.chunk.js","sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","enum Pattern {\n    FLUCTUATING,\n    LARGE_SPIKE,\n    DECREASING,\n    SMALL_SPIKE,\n    UNKNOWN,\n    AGGREGATE,\n}\n\ntype PatternDictionary = {\n    [K in Pattern]: number;\n};\n\ninterface UserHourData {\n    am: number | null;\n    pm: number | null;\n}\n\ninterface UserTurnipsData {\n    buy: number | null;\n    mon: UserHourData;\n    tue: UserHourData;\n    wed: UserHourData;\n    thu: UserHourData;\n    fri: UserHourData;\n    sat: UserHourData;\n    previousPattern: Pattern;\n    firstBuy: boolean;\n}\n\nexport interface TurnipsResult {\n    pattern: Pattern;\n    chance: number;\n    hours: { min: number, max: number, avg: number }[];\n}\n\ninterface TurnipsIntermediateResult {\n    pattern: Pattern;\n    chance: number;\n    hours: number[][];\n}\n\nfunction intermediateToResult(result: TurnipsIntermediateResult): TurnipsResult {\n    return {\n        pattern: result.pattern,\n        chance: result.chance,\n        hours: result.hours.map(\n            (points) => (\n                {\n                    min: Math.min(...points),\n                    max: Math.max(...points),\n                    avg: points.reduce((a, b) => a + b, 0) / points.length,\n                }\n            )\n        )\n    };\n}\n\nfunction aggregate(results: TurnipsIntermediateResult[]): TurnipsIntermediateResult {\n    return {\n        pattern: results.reduce((pattern, result) => result.pattern != pattern ? Pattern.AGGREGATE : result.pattern, results[0].pattern),\n        chance: results.reduce((chance, pattern) => chance + pattern.chance, 0),\n        hours: results.reduce(\n            (hours: number[][], result): number[][] => hours.map(\n                (prices, index) => [...prices, ...result.hours[index]]\n            ),\n            [[], [], [], [], [], [], [], [], [], [], [], []]\n        ),\n    };\n}\n\nconst CHANCE_FLUCTUATING: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.2,\n    [Pattern.LARGE_SPIKE]: 0.5,\n    [Pattern.DECREASING]: 0.25,\n    [Pattern.SMALL_SPIKE]: 0.45,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nconst CHANCE_LARGE_SPIKE: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.3,\n    [Pattern.LARGE_SPIKE]: 0.05,\n    [Pattern.DECREASING]: 0.45,\n    [Pattern.SMALL_SPIKE]: 0.25,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nconst CHANCE_DECREASING: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.15,\n    [Pattern.LARGE_SPIKE]: 0.2,\n    [Pattern.DECREASING]: 0.05,\n    [Pattern.SMALL_SPIKE]: 0.15,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nconst CHANCE_SMALL_SPIKE: PatternDictionary = {\n    [Pattern.FLUCTUATING]: 0.35,\n    [Pattern.LARGE_SPIKE]: 0.25,\n    [Pattern.DECREASING]: 0.25,\n    [Pattern.SMALL_SPIKE]: 0.15,\n    [Pattern.UNKNOWN]: 0.25,\n    [Pattern.AGGREGATE]: 0.25,\n};\n\nfunction calculateOneFluctuating(categoryChance: number, data: UserTurnipsData) {\n    return [];\n}\n\nfunction calculateFluctuating(categoryChance: number, data: UserTurnipsData) {\n    if (data.buy !== null) {\n        return [...calculateOneFluctuating(categoryChance, data)];\n    }\n    //\n    return [];\n}\n\nfunction calculateOneLargeSpike(categoryChance: number, data: UserTurnipsData) {\n    //\n    return [];\n}\n\nfunction calculateLargeSpike(categoryChance: number, data: UserTurnipsData) {\n    //\n    return [];\n}\n\nfunction calculateOneDecreasing(categoryChance: number, data: UserTurnipsData) {\n    //\n    return [];\n}\n\nfunction calculateDecreasing(categoryChance: number, data: UserTurnipsData) {\n    //\n    return [];\n}\n\nfunction calculateOneSmallSpike(categoryChance: number, data: UserTurnipsData) {\n    //\n    return [];\n}\n\nfunction calculateSmallSpike(categoryChance: number, data: UserTurnipsData) {\n    //\n    return [];\n}\n\nfunction calculate(data: UserTurnipsData): TurnipsResult[] {\n    let chanceFluctuating = CHANCE_FLUCTUATING[data.previousPattern];\n    let chanceLargeSpike = CHANCE_FLUCTUATING[data.previousPattern];\n    let chanceDecreasing = CHANCE_FLUCTUATING[data.previousPattern];\n    let chanceSmallSpike = CHANCE_FLUCTUATING[data.previousPattern];\n    let result = [\n        ...calculateFluctuating(chanceFluctuating, data),\n        ...calculateLargeSpike(chanceLargeSpike, data),\n        ...calculateDecreasing(chanceDecreasing, data),\n        ...calculateSmallSpike(chanceSmallSpike, data),\n    ]\n    // result.push(aggregate(result));\n    return result;\n}\n\nconst emptyWeek: UserTurnipsData = {\n    buy: null,\n    mon: { am: null, pm: null },\n    tue: { am: null, pm: null },\n    wed: { am: null, pm: null },\n    thu: { am: null, pm: null },\n    fri: { am: null, pm: null },\n    sat: { am: null, pm: null },\n    previousPattern: Pattern.UNKNOWN,\n    firstBuy: false,\n};\n\nexport { Pattern, calculate, emptyWeek };\nexport type { UserHourData, UserTurnipsData };\n\n","import { Button, Card, CardContent, CardHeader, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select, TextField, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport deepmerge from \"deepmerge\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useTranslation } from \"react-i18next\";\nimport { Centred } from '../../components';\nimport { clone, DeepPartial, getDefault } from \"../../misc\";\nimport { emptyWeek, Pattern, TurnipsResult, UserTurnipsData } from \"./data\";\n\nconst weekDays: ('mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat')[] = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\nexport default function Turnips() {\n    const foundData = getDefault(window.localStorage.turnips, clone(emptyWeek));\n    const [data, setDataImpl] = React.useState(foundData);\n    const [confirmOpen, setConfirmOpen] = React.useState(false);\n    const [dontAsk, setDontAsk] = React.useState(false);\n    function confirm() {\n        if (dontAsk) {\n            window.localStorage.turnipDontConfirm = 'true';\n        }\n        setConfirmOpen(false);\n        reset();\n    }\n    function setData(newData: DeepPartial<UserTurnipsData>) {\n        let toSet: UserTurnipsData = deepmerge<UserTurnipsData>(data, newData as Partial<UserTurnipsData>);\n        window.localStorage.turnips = JSON.stringify(toSet);\n        setDataImpl(toSet);\n    }\n    let result: TurnipsResult[] = [];\n    function nextWeek() {\n        if (getDefault<boolean>(window.localStorage.turnipDontConfirm, false)) {\n            reset();\n        } else {\n            setConfirmOpen(true);\n        }\n    }\n    function reset() {\n        let newData = clone(emptyWeek);\n        newData.previousPattern = result.map((result) => result.pattern).reduce((aggregate, next) => {\n            if (aggregate === Pattern.UNKNOWN) {\n                return Pattern.UNKNOWN;\n            }\n            if (aggregate === Pattern.AGGREGATE) {\n                return next;\n            }\n            if (next === Pattern.AGGREGATE) {\n                return aggregate;\n            }\n            if (aggregate !== next) {\n                return Pattern.UNKNOWN;\n            } else {\n                return next;\n            }\n        }, Pattern.UNKNOWN);\n        setData(newData);\n    }\n    const { t } = useTranslation(['core', 'turnips']);\n    const theme = useTheme();\n    const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n    const firstBuy = <Grid item xs={12} sm={6}>\n        <Centred>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={data.firstBuy}\n                        onChange={(event) => setData({ firstBuy: event.target.checked })}\n                        color=\"primary\"\n                    />\n                }\n                label={t('turnips:prices.first_buy.checkbox')}\n                title={t('turnips:prices.first_buy.hover')}\n            />\n        </Centred>\n    </Grid>;\n    return <>\n        <Helmet>\n            <title>{t('core:title.browser.page', { pageTitle: t('core:pages.turnips') })}</title>\n        </Helmet>\n        <div style={{ maxWidth: 800, margin: 'auto' }}>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={t('turnips:prices.title')} />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        {isXs && firstBuy}\n                        <Grid item xs={12} sm={6}>\n                            <TextField type=\"number\" fullWidth value={data.buy} onChange={(event) => setData({ buy: event.target.value ? +event.target.value : null })} label={t('turnips:prices.buy')} />\n                        </Grid>\n                        {!isXs && firstBuy}\n                        {weekDays.map((day) => (\n                            <>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField type=\"number\" fullWidth value={data[day].am} onChange={(event) => setData({ [day]: { am: event.target.value ? +event.target.value : null } })} label={t('turnips:prices.am', { day: t(`core:time.weekday.${day}.long`) })} />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField type=\"number\" fullWidth value={data[day].pm} onChange={(event) => setData({ [day]: { pm: event.target.value ? +event.target.value : null } })} label={t('turnips:prices.pm', { day: t(`core:time.weekday.${day}.long`) })} />\n                                </Grid>\n                            </>\n                        ))}\n                        <Grid item xs={12} sm={6}>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"comp-label\">{t('turnips:pattern.label')}</InputLabel>\n                                <Select\n                                    value={data.previousPattern}\n                                    onChange={(event) => setData(\n                                        { previousPattern: event.target.value as Pattern }\n                                    )}\n                                    labelId='pattern-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value={Pattern.SMALL_SPIKE}>{t('turnips:pattern.small_spike')}</MenuItem>\n                                    <MenuItem value={Pattern.LARGE_SPIKE}>{t('turnips:pattern.large_spike')}</MenuItem>\n                                    <MenuItem value={Pattern.FLUCTUATING}>{t('turnips:pattern.fluctuating')}</MenuItem>\n                                    <MenuItem value={Pattern.DECREASING}>{t('turnips:pattern.decreasing')}</MenuItem>\n                                    <MenuItem value={Pattern.UNKNOWN}>{t('turnips:pattern.unknown')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Button style={{ height: '100%' }} fullWidth variant=\"contained\" color=\"primary\" onClick={nextWeek}>{t('turnips:ui.start_next')}</Button>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </div>\n        <Dialog open={confirmOpen}>\n            <DialogTitle>{t('turnips:ui.reset_dialogue.title')}</DialogTitle>\n            <DialogContent>\n                {t('turnips:ui.reset_dialogue.text')}\n                <br />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={dontAsk}\n                            onChange={(event) => setDontAsk(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('core:ui.dont_ask')}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setConfirmOpen(false)}>\n                    {t('core:ui.cancel')}\n                </Button>\n                <Button onClick={confirm}>\n                    {t('core:ui.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </>;\n}"],"sourceRoot":""}