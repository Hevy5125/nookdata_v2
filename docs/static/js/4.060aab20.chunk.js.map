{"version":3,"sources":["pages/critterpedia/data.ts","pages/critterpedia/components/MonthPanels.tsx","misc.ts","pages/critterpedia/components/TimeTracker.tsx","pages/critterpedia/components/CritterPanel.tsx","pages/critterpedia/page.tsx"],"names":["getCritterName","critter","type","t","normal_name","getCritterQuote","playername","getCritterLocation","location","months","winter","theme","settings","hemisphere","palette","summer","spring","autumn","_getTextWidthDiv","seasons","MonthPanel","props","useTheme","useTranslation","useNDContext","width","Card","variant","style","backgroundColor","month","main","opacity","undefined","color","contrastText","borderColor","active","error","borderWidth","borderStyle","margin","CardContent","paddingBottom","MonthPanels","activeMonth","getTextWidth","text","div","document","createElement","position","top","left","body","appendChild","innerText","clientWidth","TimeTracker","now","time","progress","getMilliseconds","getSeconds","getMinutes","getHours","className","marginBottom","Math","max","useTwelveHourTime","pad","h12","h24","m","primary","hours","modelled","useStyles","makeStyles","createStyles","transparent","CritterPanel","data","slice","activeNow","hour","reduce","a","b","leavingSoon","searchParameters","activeRequired","name","price","priceComparison","size","stateRequired","shadow","match","includes","toLowerCase","obtained","title","capitalise","index","filter","elem","join","CardActionArea","onClick","setOpenDialogue","Warning","Help","src","toString","padStart","Dialog","open","onClose","scroll","PaperProps","transition","DialogTitle","Toolbar","IconButton","edge","direction","ChevronLeft","ChevronRight","disabled","textAlign","flexGrow","DialogContent","Divider","marginTop","dangerouslySetInnerHTML","__html","playerName","map","getMonth","dry","WbSunny","rain","Cloud","DialogActions","FormControlLabel","control","Checkbox","checked","onChange","event","setObtained","target","label","setModelled","range","stop","Array","from","keys","Critterpedia","window","localStorage","critterpedia","bugs","fish","i","push","JSON","stringify","parse","React","useState","setActiveRequired","setLocation","setName","setPrice","setPriceComparison","setSize","setStateRequired","load","bugsData","setBugsDataImpl","fishData","setFishDataImpl","history","useHistory","setBugsData","bug","state","setFishData","Date","Helmet","maxWidth","CardHeader","Grid","container","spacing","item","xs","sm","md","TextField","fullWidth","value","FormControl","InputLabel","id","Select","labelId","MenuItem","Trans","i18nKey","total","overflowX","paddingRight","y","x","myIndex","critterData"],"mappings":"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","file":"static/js/4.060aab20.chunk.js","sourcesContent":["import { bugs, fish } from './data.json';\n\ntype Critter = typeof bugs[0] | typeof fish[0];\nexport type { Critter };\nexport {\n    getCritterName,\n    getCritterQuote,\n    getCritterLocation\n};\n\n\nfunction getCritterName(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.name.${critter.normal_name}`);\n}\n\nfunction getCritterQuote(critter: Critter, type: 'bug' | 'fish', playername: string, t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.quote.${critter.normal_name}`, { playername });\n}\n\nfunction getCritterLocation(critter: Critter, type: 'bug' | 'fish', t: (key: string, props?: Object) => string) {\n    return t(`critterpedia:${type}.location.${critter.location}`);\n}\n\n\n","import { Card, CardContent, Theme, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport UserSettings from '../../../user_settings';\nimport './CritterPanel.scss';\nconst months = [\n    \"critterpedia:dialogue.months.jan\",\n    \"critterpedia:dialogue.months.feb\",\n    \"critterpedia:dialogue.months.mar\",\n    \"critterpedia:dialogue.months.apr\",\n    \"critterpedia:dialogue.months.may\",\n    \"critterpedia:dialogue.months.jun\",\n    \"critterpedia:dialogue.months.jul\",\n    \"critterpedia:dialogue.months.aug\",\n    \"critterpedia:dialogue.months.sep\",\n    \"critterpedia:dialogue.months.oct\",\n    \"critterpedia:dialogue.months.nov\",\n    \"critterpedia:dialogue.months.dec\",\n];\nfunction winter(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.winter\n            : theme.palette.summer\n    );\n}\nfunction spring(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.spring\n            : theme.palette.autumn\n    );\n}\nfunction summer(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.summer\n            : theme.palette.winter\n    );\n}\nfunction autumn(theme: Theme, settings: UserSettings) {\n    return (\n        settings.hemisphere === \"north\"\n            ? theme.palette.autumn\n            : theme.palette.spring\n    );\n}\nconst seasons = [\n    winter,\n    winter,\n    spring,\n    spring,\n    spring,\n    summer,\n    summer,\n    summer,\n    autumn,\n    autumn,\n    autumn,\n    winter,\n];\n\ninterface MonthPanelProps {\n    months: boolean[];\n    month: number;\n    active: boolean;\n}\nfunction MonthPanel(props: MonthPanelProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('critterpedia');\n    const { settings } = useNDContext();\n    return <td width=\"33%\">\n        <Card\n            variant=\"outlined\"\n            style={{\n                // backgroundColor: ((colour) => (\n                //     props.months[props.month]\n                //         ? colour.main\n                //         : colour.transparent\n                // ))(\n                //     seasons[props.month](theme, settings)\n                // ),\n                backgroundColor: seasons[props.month](theme, settings).main,\n                opacity: props.months[props.month] ? undefined : theme.palette.opacity,\n                color: seasons[props.month](theme, settings).contrastText,\n                borderColor: props.active ? theme.palette.error.main : 'transparent',\n                borderWidth: 2,\n                borderStyle: 'solid',\n                margin: -1,\n            }}\n        >\n            <CardContent style={{ paddingBottom: 16 }}>\n                {t(months[props.month])}\n            </CardContent>\n        </Card>\n    </td>\n}\ninterface MonthPanelsProps {\n    months: boolean[];\n    activeMonth: number;\n}\nexport default function MonthPanels(props: MonthPanelsProps) {\n    return <table style={{ width: '100%' }}>\n        <tbody>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={0}\n                    active={props.activeMonth == 0}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={1}\n                    active={props.activeMonth == 1}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={2}\n                    active={props.activeMonth == 2}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={3}\n                    active={props.activeMonth == 3}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={4}\n                    active={props.activeMonth == 4}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={5}\n                    active={props.activeMonth == 5}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={6}\n                    active={props.activeMonth == 6}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={7}\n                    active={props.activeMonth == 7}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={8}\n                    active={props.activeMonth == 8}\n                />\n            </tr>\n            <tr>\n                <MonthPanel\n                    months={props.months}\n                    month={9}\n                    active={props.activeMonth == 9}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={10}\n                    active={props.activeMonth == 10}\n                />\n                <MonthPanel\n                    months={props.months}\n                    month={11}\n                    active={props.activeMonth == 11}\n                />\n            </tr>\n        </tbody>\n    </table >;\n}","type Dict<V> = {\n    [key: string]: V;\n}\nvar _getTextWidthDiv: HTMLDivElement;\nfunction setUpDiv() {\n    _getTextWidthDiv = document.createElement(\"div\");\n    _getTextWidthDiv.style.position = 'absolute';\n    _getTextWidthDiv.style.top = '-9999px';\n    _getTextWidthDiv.style.left = '-9999px';\n    // _getTextWidthDiv.ariaHidden = true;\n    document.body.appendChild(_getTextWidthDiv);\n    return _getTextWidthDiv;\n}\nfunction getTextWidth(text: string) {\n    var div = _getTextWidthDiv ?? (setUpDiv());\n    div.innerText = text\n    return div.clientWidth;\n}\n\nexport type { Dict };\nexport { getTextWidth };\n\n","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNDContext } from '../../../context';\nimport { getTextWidth } from '../../../misc';\nimport './TimeTracker.scss';\n\ninterface TimeTrackerProps {\n    hours: boolean[];\n}\n\nexport default function TimeTracker(props: TimeTrackerProps) {\n    const theme = useTheme();\n    const { t } = useTranslation('core');\n    const { time: now, settings } = useNDContext();\n    let progress = (\n        (\n            (\n                now.getMilliseconds() / 1000\n                + now.getSeconds()\n            ) / 60\n            + now.getMinutes()\n        ) / 60\n        + now.getHours()\n    ) * 100 / 24;\n    return <div\n        className=\"time-tracker\"\n        style={{\n            marginBottom: Math.max(\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n                getTextWidth(\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                ),\n            ) - 8,\n        }}\n    >\n        <div\n            className=\"now\"\n            style={{\n                backgroundColor: theme.palette.error.main,\n                '--progress': `${progress}%`,\n            }}\n        />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[0] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[1] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[2] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[3] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[4] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[5] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 6,\n                            h24: 6,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[6] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[7] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[8] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[9] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[10] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[11] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 12,\n                            h24: 12,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[12] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[13] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[14] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[15] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[16] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[17] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"medium-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.pm_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '',\n                            h12: 6,\n                            h24: 18,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n        <div className=\"hour\" style={{ backgroundColor: props.hours[18] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[19] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[20] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[21] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[22] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div className=\"small-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n        <div className=\"hour\" style={{ backgroundColor: props.hours[23] ? theme.palette.modelled.main : 'transparent', opacity: theme.palette.opacity }} />\n        <div>\n            <div className=\"large-division\" style={{ backgroundColor: theme.palette.text.primary }} />\n            <div className=\"division-label\">\n                {\n                    t(\n                        settings.useTwelveHourTime\n                            ? 'core:time.twelve_hour.am_short'\n                            : 'core:time.twenty_four_hour',\n                        {\n                            pad: '0',\n                            h12: 12,\n                            h24: 0,\n                            m: '00',\n                        }\n                    )\n                }\n            </div>\n        </div>\n    </div>\n}","import { Card, CardActionArea, CardContent, Checkbox, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, IconButton, makeStyles, Toolbar, useTheme } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Cloud, Help, Warning, WbSunny } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNDContext } from \"../../../context\";\nimport '../../../prototype_mods';\nimport { getCritterLocation, getCritterName, getCritterQuote } from '../data';\nimport { bugs, fish } from '../data.json';\nimport SearchParameters from \"../search_parameters\";\nimport './CritterPanel.scss';\nimport MonthPanels from \"./MonthPanels\";\nimport TimeTracker from \"./TimeTracker\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    modelled: {\n        color: theme.palette.modelled.main,\n        '&.Mui-disabled': {\n            color: theme.palette.modelled.transparent,\n        },\n    },\n}))\n\ninterface CritterPanelProps {\n    data: (typeof bugs[0]) | (typeof fish[0]);\n    type: 'bug' | 'fish';\n    obtained: boolean;\n    modelled: boolean;\n    setObtained: (value: boolean) => void;\n    setModelled: (value: boolean) => void;\n    month: number;\n    hour: number;\n    searchParameters: SearchParameters;\n    open: boolean;\n    setOpenDialogue: (value: number | null) => void;\n}\nfunction CritterPanel(props: CritterPanelProps) {\n    const { t } = useTranslation('critterpedia');\n    const { time, settings } = useNDContext();\n    const hours = (\n        settings.hemisphere == 'north' ?\n            props.data.hours :\n            [...props.data.hours.slice(6), ...props.data.hours.slice(0, 6)]\n    );\n    const theme = useTheme();\n    const activeNow = hours[props.month][props.hour];\n    const activeMonth = hours[props.month].reduce((a, b) => a || b);\n    const leavingSoon = activeMonth && !hours[(props.month + 1) % 12].reduce((a, b) => a || b);\n    const { palette } = useTheme();\n    const {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    } = props.searchParameters;\n    let shadow = '';\n    if (props.type == 'fish') {\n        shadow = t(`critterpedia:fish.size.${(props.data as typeof fish[0]).shadow}`);\n    }\n    let match = true;\n    if (activeRequired === 'now' && !activeNow) {\n        match = false;\n    } else if (activeRequired === 'month' && !activeMonth) {\n        match = false;\n    } else if (activeRequired === 'until_next' && !leavingSoon) {\n        match = false;\n    } else if (!getCritterLocation(props.data, props.type, t).includes(location.toLowerCase())) {\n        match = false;\n    } else if (!getCritterName(props.data, props.type, t).includes(name.toLowerCase())) {\n        match = false;\n    } else if (props.type == 'fish' && !shadow.includes(size.toLowerCase())) {\n        match = false;\n    } else if (stateRequired === 'unobtained' && props.obtained) {\n        match = false;\n    } else if (stateRequired === 'unmodelled' && props.modelled) {\n        match = false;\n    } else {\n        switch (priceComparison) {\n            case '>=':\n                if (props.data.price < price) {\n                    match = false;\n                }\n                break;\n            case '=':\n                if (props.data.price != price) {\n                    match = false;\n                }\n                break;\n            case '<=':\n                if (props.data.price > price) {\n                    match = false;\n                }\n                break;\n        }\n    }\n\n    const title = [\n        t(`critterpedia:panel.type.${props.type}`, { name: getCritterName(props.data, props.type, t).capitalise(), index: props.data.index + 1 }),\n        (activeMonth ? (leavingSoon ? t('critterpedia:panel.status.leaving_soon') : '') : t('critterpedia:panel.status.unavailable')),\n        (activeNow ? t('critterpedia:panel.status.now') : ''),\n        (props.modelled ? t('critterpedia:panel.status.modelled') : ''),\n        t('critterpedia:panel.status.details'),\n    ].filter((elem) => !!elem).join('\\n');\n\n    return <>\n        <Card\n            className=\"critter-panel\"\n            title={title}\n            style={\n                {\n                    backgroundColor: props.modelled\n                        ? palette.modelled.transparent\n                        : (\n                            props.obtained\n                                ? palette.primary.transparent\n                                : (\n                                    activeMonth\n                                        ? undefined\n                                        : palette.error.transparent\n                                )\n                        ),\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            activeMonth\n                                ? (\n                                    props.obtained\n                                        ? palette.primary.main\n                                        : undefined\n                                )\n                                : palette.error.main\n                        ),\n                    opacity: match ? 1 : theme.palette.opacity,\n                }\n            }\n        >\n            <CardActionArea onClick={() => props.setOpenDialogue(props.data.index)}>\n                {\n                    leavingSoon\n                        ? <Warning style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : palette.error.main,\n                        }} />\n                        : <Help style={{\n                            color: props.modelled\n                                ? palette.modelled.main\n                                : (\n                                    activeMonth\n                                        ? (\n                                            props.obtained\n                                                ? palette.primary.main\n                                                : undefined\n                                        )\n                                        : palette.error.main\n                                ),\n                        }} />\n                }\n                <img src={\n                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                    }.png`\n                } />\n            </CardActionArea>\n        </Card>\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpenDialogue(null)}\n            scroll=\"body\"\n            PaperProps={{\n                style: {\n                    borderColor: props.modelled\n                        ? palette.modelled.main\n                        : (\n                            props.obtained\n                                ? palette.primary.main\n                                : 'transparent'\n                        ),\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    width: \"75%\",\n                    transition: 'color 0.5s ease-in-out, border-color 0.5s ease-in-out',\n                }\n            }}\n        >\n            <DialogTitle style={{\n                paddingBottom: 0,\n            }}\n            >\n                <Toolbar>\n                    {\n                        props.data.index > 0\n                            ? <IconButton edge=\"start\" onClick={() => props.setOpenDialogue(props.data.index - 1)}>\n                                {theme.direction == 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                    <div style={{\n                        textAlign: 'center',\n                        color: props.modelled\n                            ? palette.modelled.main\n                            : (\n                                props.obtained\n                                    ? palette.primary.main\n                                    : undefined\n                            ),\n                        flexGrow: 1,\n                        transition: 'color 0.5s ease-in-out',\n                    }}>\n                        {getCritterName(props.data, props.type, t).capitalise()}\n                    </div>\n                    {\n                        props.data.index < 79\n                            ? <IconButton edge=\"end\" onClick={() => props.setOpenDialogue(props.data.index + 1)}>\n                                {theme.direction == 'ltr' ? <ChevronRight /> : <ChevronLeft />}\n                            </IconButton>\n                            : <IconButton disabled />\n                    }\n                </Toolbar>\n            </DialogTitle>\n            <DialogContent\n                style={{\n                    textAlign: 'center'\n                }}\n            >\n                {t(`critterpedia:dialogue.type.${props.type}`, { index: props.data.index + 1 })}\n                <br />\n                <Divider style={{ marginTop: 8, marginBottom: 8 }} />\n                <div\n                    style={{ paddingBottom: 8 }}\n                    dangerouslySetInnerHTML={{\n                        __html: getCritterQuote(\n                            props.data,\n                            props.type,\n                            settings.playerName,\n                            t\n                        )\n                    }}\n                />\n                <MonthPanels\n                    months={hours.map(\n                        (month) => month.reduce((a, b) => a || b)\n                    )}\n                    activeMonth={props.month}\n                />\n                <TimeTracker\n                    hours={hours[time.getMonth()]}\n                />\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <div className=\"critter-overview\">\n                            <img\n                                src={\n                                    `assets/${props.type}/${props.data.index.toString().padStart(2, '0')\n                                    }.png`\n                                }\n                                className=\"critter-icon\"\n                            />\n                            {props.data.dry && <div\n                                title={t('critterpedia:dialogue.details.dry')}\n                            >\n                                <WbSunny\n                                    className=\"critter-dry\"\n                                    style={{\n                                        color: theme.palette.summer.main\n                                    }}\n                                />\n                            </div>}\n                            {props.data.rain && <div\n                                title={t('critterpedia:dialogue.details.wet')}\n                            >\n                                <Cloud\n                                    className=\"critter-wet\"\n                                    style={{\n                                        color: theme.palette.winter.main\n                                    }}\n                                />\n                            </div>}\n                            <div className=\"location-label\">{t('critterpedia:dialogue.details.found')}</div>\n                            <div className=\"price-label\">{t('critterpedia:dialogue.details.price')}</div>\n                            <div className=\"location\">{getCritterLocation(props.data, props.type, t)}</div>\n                            <div className=\"price\">{props.data.price}</div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.obtained}\n                            onChange={(event) => props.setObtained(event.target.checked)}\n                            color=\"primary\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.obtained')}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            className={useStyles(theme).modelled}\n                            checked={props.modelled}\n                            disabled={!props.obtained}\n                            onChange={(event) => props.setModelled(event.target.checked)}\n                            color=\"default\"\n                        />\n                    }\n                    label={t('critterpedia:dialogue.modelled')}\n                />\n            </DialogActions>\n        </Dialog>\n    </>;\n}\nexport default CritterPanel;","import { Card, CardContent, CardHeader, FormControl, Grid, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router';\nimport CritterPanel from './components/CritterPanel';\nimport { bugs, fish } from './data.json';\nimport SearchParameters from './search_parameters';\n\nfunction range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\n\ninterface UserCritterData {\n    obtained: boolean;\n    modelled: boolean;\n}\n\ninterface UserCritterpediaData {\n    bugs: UserCritterData[];\n    fish: UserCritterData[];\n}\n\ninterface CritterpediaProps {\n    load?: { type: 'bug' | 'fish', index: number }\n}\n\nexport default function Critterpedia(props: CritterpediaProps) {\n    const { t } = useTranslation('critterpedia');\n    const theme = useTheme();\n    if (!window.localStorage.critterpedia) {\n        let data: UserCritterpediaData = {\n            bugs: [],\n            fish: [],\n        };\n        for (let i = 0; i < 80; i++) {\n            data.bugs.push({ obtained: false, modelled: false });\n            data.fish.push({ obtained: false, modelled: false });\n        }\n        window.localStorage.critterpedia = JSON.stringify(data);\n    }\n    const data: UserCritterpediaData = JSON.parse(window.localStorage.critterpedia);\n    const [activeRequired, setActiveRequired] = React.useState<'now' | 'month' | 'until_next' | 'any'>('any');\n    const [location, setLocation] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState(0);\n    const [priceComparison, setPriceComparison] = React.useState<'>=' | '=' | '<='>('>=');\n    const [size, setSize] = React.useState('');\n    const [stateRequired, setStateRequired] = React.useState<'unobtained' | 'unmodelled' | 'any'>('any');\n    const searchParameters: SearchParameters = {\n        activeRequired,\n        location,\n        name,\n        price,\n        priceComparison,\n        size,\n        stateRequired,\n    };\n    const { type, index } = props.load ?? { type: 'bug', index: null };\n    const [bugsData, setBugsDataImpl] = React.useState(data.bugs);\n    const [fishData, setFishDataImpl] = React.useState(data.fish);\n\n    const history = useHistory();\n\n    function setOpenDialogue(type: 'bug' | 'fish', index: number | null) {\n        if (index === null) {\n            history.push('/critterpedia');\n        } else {\n            history.push(`/critterpedia/${type}/${index}`);\n        }\n    }\n\n    function setBugsData(bug: number, state: UserCritterData) {\n        data.bugs[bug] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setBugsDataImpl(data.bugs);\n    }\n    function setFishData(fish: number, state: UserCritterData) {\n        data.fish[fish] = state;\n        window.localStorage.critterpedia = JSON.stringify(data);\n        setFishDataImpl(data.fish);\n    }\n    const now = new Date();\n    const title = index !== null ? t('critterpedia:title.info', { name: t(`critterpedia:${type}.name.${(type === 'bug' ? bugs : fish)[index].normal_name}`).capitalise() }) : t('critterpedia:title.default');\n    return <>\n        <Helmet>\n            <title>{title}</title>\n        </Helmet>\n        <div style={{ maxWidth: 1316, margin: 'auto' }}>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={t('critterpedia:search.title')} />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={name} onChange={(event) => setName(event.target.value)} label={t('critterpedia:search.name')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={location} onChange={(event) => setLocation(event.target.value)} label={t('critterpedia:search.location')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <TextField fullWidth value={size} onChange={(event) => setSize(event.target.value)} label={t('critterpedia:search.shadow')} />\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"comp-label\">{t('critterpedia:search.price.label')}</InputLabel>\n                                <Select\n                                    value={priceComparison}\n                                    onChange={(event) => setPriceComparison(\n                                        event.target.value as ('>=' | '=' | '<=')\n                                    )}\n                                    labelId='comp-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\">=\">{t('critterpedia:search.price.comp_values.ge')}</MenuItem>\n                                    <MenuItem value=\"=\">{t('critterpedia:search.price.comp_values.eq')}</MenuItem>\n                                    <MenuItem value=\"<=\">{t('critterpedia:search.price.comp_values.le')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6} sm={3} md={2} >\n                            <TextField fullWidth value={price} onChange={(event) => setPrice(+event.target.value)} label={t('critterpedia:search.price.value')} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"active-label\">{t('critterpedia:search.active.title')}</InputLabel>\n                                <Select\n                                    value={activeRequired}\n                                    onChange={(event) => setActiveRequired(\n                                        event.target.value as ('now' | 'month' | 'until_next' | 'any')\n                                    )}\n                                    labelId='active-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.active.any')}</MenuItem>\n                                    <MenuItem value=\"month\">{t('critterpedia:search.active.month')}</MenuItem>\n                                    <MenuItem value=\"now\">{t('critterpedia:search.active.now')}</MenuItem>\n                                    <MenuItem value=\"until_next\">{t('critterpedia:search.active.until_next')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} >\n                            <FormControl fullWidth>\n                                <InputLabel id=\"state-label\">{t('critterpedia:search.state.title')}</InputLabel>\n                                <Select\n                                    value={stateRequired}\n                                    onChange={(event) => setStateRequired(\n                                        event.target.value as ('any' | 'unobtained' | 'unmodelled')\n                                    )}\n                                    labelId='state-label'\n                                    fullWidth\n                                >\n                                    <MenuItem value=\"any\">{t('critterpedia:search.state.any')}</MenuItem>\n                                    <MenuItem value=\"unobtained\">{t('critterpedia:search.state.unobtained')}</MenuItem>\n                                    <MenuItem value=\"unmodelled\">{t('critterpedia:search.state.unmodelled')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.bugs\" t={t}>\n                        Bugs <span style={{ color: theme.palette.primary.main }}>\n                            ({\n                                {\n                                    obtained: bugsData.reduce(\n                                        (total, bug) => total + (+bug.obtained), 0),\n                                }\n                            } / 80)\n                    </span> <span style={{ color: theme.palette.modelled.main }}>\n                            ({\n                                {\n                                    modelled: bugsData.reduce(\n                                        (total, bug) => total + (+bug.modelled), 0),\n                                }\n                            } / 80)\n                    </span>\n                    </Trans>\n                } />\n                <CardContent style={{ overflowX: 'auto' }}>\n                    <table style={{ paddingRight: 16 }}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = bugsData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={bugs[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                type=\"bug\"\n                                                                setObtained={(value: boolean) => setBugsData(myIndex, { obtained: value, modelled: false })}\n                                                                setModelled={(value: boolean) => setBugsData(myIndex, { obtained: true, modelled: value })}\n                                                                month={now.getMonth()}\n                                                                hour={now.getHours()}\n                                                                open={type === 'bug' && index === myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('bug', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n            <Card style={{ margin: 16 }}>\n                <CardHeader title={\n                    <Trans i18nKey=\"critterpedia:cards.fish\" t={t}>\n                        Fish <span style={{ color: theme.palette.primary.main }}>\n                            ({\n                                {\n                                    obtained: fishData.reduce(\n                                        (total, fish) => total + (+fish.obtained), 0),\n                                }\n                            } / 80)\n                        </span> <span style={{ color: theme.palette.modelled.main }}>\n                            ({\n                                {\n                                    modelled: fishData.reduce(\n                                        (total, fish) => total + (+fish.modelled), 0),\n                                }\n                            } / 80)\n                        </span>\n                    </Trans>\n                } />\n                <CardContent style={{ overflowX: 'auto' }}>\n                    <table style={{ paddingRight: 16 }}>\n                        <tbody>\n                            {\n                                range(5).map(\n                                    (y) =>\n                                        <tr>\n                                            {\n                                                range(16).map(\n                                                    (x) => {\n                                                        const myIndex = x * 5 + y;\n                                                        const critterData = fishData[myIndex];\n                                                        return <td key={x}>\n                                                            <CritterPanel\n                                                                data={fish[myIndex]}\n                                                                obtained={critterData.obtained}\n                                                                modelled={critterData.modelled}\n                                                                type=\"fish\"\n                                                                setObtained={(value: boolean) => setFishData(myIndex, { obtained: value, modelled: false })}\n                                                                setModelled={(value: boolean) => setFishData(myIndex, { obtained: true, modelled: value })}\n                                                                month={now.getMonth()}\n                                                                hour={now.getHours()}\n                                                                open={type === 'fish' && index == myIndex}\n                                                                setOpenDialogue={(value) => setOpenDialogue('fish', value)}\n                                                                searchParameters={searchParameters}\n                                                            />\n                                                        </td>;\n                                                    }\n                                                )\n                                            }\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n        </div>\n    </>\n}"],"sourceRoot":""}