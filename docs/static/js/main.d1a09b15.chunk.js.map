{"version":3,"sources":["components/InfoDialogue.tsx","components/LanguageDialogue.tsx","components/AppBar.tsx","components/AppFrame.tsx","components/DrawerAdjust.tsx","components/ListItemLink.tsx","components/Loading.tsx","components/NavigationDrawer.tsx","components/UpdateReadyDialogue.tsx","components/WorksOfflineDialogue.tsx","i18n.ts","pages/critterpedia/index.ts","serviceWorkerRegistration.ts","common_theme_data.ts","dark.tsx","light.tsx","themes.tsx","index.tsx","misc.ts","context.ts","prototype_mods.ts"],"names":["gitInfo","InfoDialogue","props","t","useTranslation","theme","useTheme","Dialog","open","onClose","setOpen","DialogTitle","DialogContent","Trans","i18nKey","style","color","palette","primary","main","gitRevision","commit","shortHash","DialogActions","Button","onClick","LanguageDialogue","aria-labelledby","PaperProps","width","textAlign","id","List","ListItem","button","setLang","ListItemText","AppBar","i18n","React","useState","langOpen","setLangOpen","infoOpen","setInfoOpen","position","Toolbar","IconButton","edge","aria-label","marginRight","setDrawerOpen","drawerOpen","flexGrow","title","Info","Language","window","localStorage","setTheme","value","changeLanguage","pageData","icon","EmojiNature","initialRenders","AppFrame","startOpen","useMediaQuery","breakpoints","up","Typography","variant","winter","display","summer","Object","entries","map","route","data","ListItemLink","to","DrawerAdjust","active","children","matches","paddingLeft","transition","exact","renderLink","useMemo","forwardRef","itemProps","ref","activeClassName","component","ListItemIcon","Loading","autoPlay","loop","muted","playsInline","className","src","type","NavigationDrawer","container","undefined","document","body","Hidden","smUp","Drawer","anchor","direction","xsDown","UpdateReadyDialogue","WorksOfflineDialogue","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","process","interpolation","escapeValue","supportedLngs","ns","defaultNS","lazy","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","commonProps","MuiTextField","MuiSelect","MuiFormControl","MuiDialogTitle","createMuiTheme","opacity","elevations","0","1","2","3","4","6","8","12","16","24","modelled","transparent","contrastText","spring","autumn","dark","secondary","background","paper","default","text","hint","disabled","zIndex","appBar","overrides","MuiAppBar","colorPrimary","backgroundColor","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","borderWidth","borderColor","borderStyle","MuiCardHeader","paddingBottom","MuiListItemIcon","themes","light","timeUpdateId","sentinelDate","Date","App","themeSetting","chosenTheme","setChosenThemeImpl","nameSetting","playerName","chosenName","islandNameSetting","islandName","chosenIslandName","hemisphereSetting","hemisphere","chosenHemisphere","offsetSetting","valueOr","timeOffset","chosenOffset","systemTimeSetting","booleanOr","useSystemTime","chosenSystemTime","twelveHourTimeSetting","useTwelveHourTime","chosenTwelveHourTime","settings","time","setTime","clearInterval","setInterval","getTheme","updateReady","setUpdateReady","worksOffline","setWorksOffline","serviceWorkerRegistration","_","ThemeProvider","CssBaseline","classList","add","setTimeout","remove","fallback","path","render","params","index","load","ReactDOM","basename","getElementById","_getTextWidthDiv","getTextWidth","div","createElement","top","left","appendChild","innerText","clientWidth","defaultValue","rv","isNaN","range","stop","Array","from","keys","defaultSettings","NDContext","createContext","NDContextProvider","Provider","useNDContext","useContext","String","prototype","capitalise","this","charAt","toUpperCase","slice","rotated","by","length","concat","rotate","push","apply","splice"],"mappings":"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","file":"static/js/main.d1a09b15.chunk.js","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport GitInfo from 'react-git-info/macro';\nimport { Trans, useTranslation } from 'react-i18next';\n\nconst gitInfo = GitInfo();\n\ninterface InfoDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function InfoDialogue(props: InfoDialogueProps) {\n    const { t } = useTranslation('core');\n    const theme = useTheme();\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>\n            {t('core:info.title')}\n        </DialogTitle>\n        <DialogContent>\n            <Trans i18nKey=\"core:info.description\" t={t}>\n                You are currently viewing NookData revision\n                <span style={{ color: theme.palette.primary.main }}>\n                    {{ gitRevision: gitInfo.commit.shortHash }}\n                </span>\n            </Trans>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => props.setOpen(false)}>\n                {t('core:button.dismiss')}\n            </Button>\n        </DialogActions>\n    </Dialog>\n}","import { Dialog, DialogTitle, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LanguageDialogueProps {\n    open: boolean;\n    setLang: (lang: string) => void;\n}\n\nexport default function LanguageDialogue(props: LanguageDialogueProps) {\n    const { t } = useTranslation('core');\n    return <Dialog aria-labelledby=\"lang-dialogue-title\" open={props.open} PaperProps={{ style: { width: 250 } }}>\n        <DialogTitle style={{ textAlign: 'center' }} id=\"lang-dialogue-title\">{t('core:lang.choose')}</DialogTitle>\n        <List>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('en')}>\n                <ListItemText primary={t('core:lang.en')} />\n            </ListItem>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('fr')}>\n                <ListItemText primary={t('core:lang.fr')} />\n            </ListItem>\n        </List>\n    </Dialog>;\n}","import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport { Info, Language } from '@material-ui/icons';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport InfoDialogue from './InfoDialogue';\nimport LanguageDialogue from './LanguageDialogue';\n\n\ninterface AppBarProps {\n    setTheme: (value: \"dark\" | \"light\") => void,\n    theme: 'dark' | 'light',\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    const { t, i18n } = useTranslation('core');\n    const [langOpen, setLangOpen] = React.useState(false);\n    const [infoOpen, setInfoOpen] = React.useState(false);\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                    <IconButton color=\"inherit\" onClick={() => setInfoOpen(true)}>\n                        <Info />\n                    </IconButton>\n                    <IconButton color=\"inherit\" onClick={() => setLangOpen(true)}>\n                        <Language />\n                    </IconButton>\n                    {props.theme == 'light'\n                        ? <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'dark';\n                                    props.setTheme('dark')\n                                }\n                            }><DarkModeIcon /></IconButton>\n                        : <IconButton\n                            color=\"inherit\"\n                            onClick={\n                                () => {\n                                    window.localStorage.theme = 'light';\n                                    props.setTheme('light')\n                                }\n                            }><LightModeIcon /></IconButton>}\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n            <LanguageDialogue open={langOpen} setLang={(value: string) => {\n                i18n.changeLanguage(value);\n                setLangOpen(false);\n            }} />\n            <InfoDialogue open={infoOpen} setOpen={setInfoOpen} />\n        </>\n    )\n}\nexport default AppBar;\n","import { List, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature } from '@material-ui/icons';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AppBar, DrawerAdjust, ListItemLink, NavigationDrawer } from '.';\nimport { Dict } from '../misc';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nexport const pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'core:pages.critterpedia',\n        icon: <EmojiNature />,\n    },\n    // '/': {\n    //     title: 'Home',\n    //     icon: <EmojiNature />,\n    // },\n}\n\ninterface AppFrameProps {\n    setTheme: (value: \"dark\" | \"light\") => void;\n    theme: \"dark\" | \"light\";\n    children: React.ReactNode;\n}\nlet initialRenders = 2;\nexport default function AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (initialRenders) {\n        if (startOpen) {\n            setDrawerOpen(true);\n        }\n        initialRenders--;\n    }\n    const { t } = useTranslation('core');\n    return (\n        <>\n            <AppBar setTheme={props.setTheme} setDrawerOpen={setDrawerOpen} theme={props.theme} drawerOpen={drawerOpen} title={<Typography variant=\"h6\">\n                <div\n                    style={{\n                        color: theme.palette.winter.main,\n                        display: 'inline'\n                    }}>{t('title.a')}</div>\n                <div\n                    style={{\n                        color: theme.palette.summer.main,\n                        display: 'inline'\n                    }}>{t('title.b')}</div>\n            </Typography>} />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItemLink to={route} icon={data.icon} primary={t(data.title)} />\n                    ))}\n                </List>\n            </NavigationDrawer>\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    );\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\n\ninterface DrawerAdjustProps {\n    active: boolean;\n    children: React.ReactNode;\n}\nexport default function DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    );\n}\n","import { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport React from 'react';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\ninterface ListItemLinkProps {\n    icon?: React.ReactNode;\n    primary: string;\n    to: string;\n    exact?: boolean;\n}\nexport default function ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, exact } = props;\n    const renderLink = React.useMemo(\n        () => React.forwardRef<any, Omit<NavLinkProps, 'to'>>((itemProps, ref) => (\n            <NavLink to={to} ref={ref} {...itemProps} activeClassName=\"Mui-selected\" exact={exact} />\n        )),\n        [to]\n    );\n    return <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n    </ListItem>;\n}\n","import React from 'react';\nexport default function Loading() {\n    return <video autoPlay loop muted playsInline className=\"loader\">\n        <source src=\"assets/shared/loading.gif.webm\" type=\"video/webm\" />\n        <source src=\"assets/shared/loading.gif.mp4\" type=\"video/mp4\" />\n    </video>;\n}","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface UpdateReadyDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function UpdateReadyDialogue(props: UpdateReadyDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_update.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_update.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface WorksOfflineDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function WorksOfflineDialogue(props: WorksOfflineDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_offline.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_offline.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:button.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: { loadPath: '/nookdata_v2/assets/i18n/{{lng}}/{{ns}}.json' },\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV == 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        supportedLngs: [\n            'en',\n            'fr',\n        ],\n        ns: 'core',\n        defaultNS: 'core',\n    });","import { lazy } from 'react';\nexport default lazy(() => import('./page'));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n    MuiDialogTitle: {\n        style: { textAlign: 'center' },\n    }\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            dark: '#3700b3',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            dark: '#3700b3',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            dark: '#018786',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport default function getTheme(theme: \"light\" | \"dark\") {\n    return themes[theme];\n}","import { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, Redirect } from 'react-router-dom';\nimport { AppFrame, Loading, UpdateReadyDialogue, WorksOfflineDialogue } from './components';\nimport { NDContextProvider } from './context';\nimport './i18n';\nimport './index.scss';\nimport { booleanOr, root, valueOr } from './misc';\nimport { Critterpedia } from './pages';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport getTheme from './themes';\nimport UserSettings from './user_settings';\n\nlet timeUpdateId: number | undefined = undefined;\nconst sentinelDate = new Date();\n\nfunction App() {\n    const { t } = useTranslation('core');\n    const themeSetting: \"dark\" | \"light\" = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setTimeout(() => setChosenThemeImpl(value), 10);\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 20);\n    }\n    const nameSetting: string = window.localStorage.playerName || 'PLAYER';\n    const [chosenName, setChosenNameImpl] = React.useState(nameSetting);\n    function setChosenName(value: string) {\n        window.localStorage.playerName = value;\n        setChosenNameImpl(value);\n    }\n    const islandNameSetting: string = window.localStorage.islandName || 'ISLAND';\n    const [chosenIslandName, setChosenIslandNameImpl] = React.useState(islandNameSetting);\n    function setChosenIslandName(value: string) {\n        window.localStorage.islandName = value;\n        setChosenIslandNameImpl(value);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphereImpl] = React.useState<'north' | 'south'>(hemisphereSetting);\n    function setChosenHemisphere(value: 'north' | 'south') {\n        window.localStorage.hemisphere = value;\n        setChosenHemisphereImpl(value);\n    }\n    const offsetSetting: number = valueOr(window.localStorage.timeOffset, 0);\n    const [chosenOffset, setChosenOffsetImpl] = React.useState(offsetSetting);\n    function setChosenOffset(value: number) {\n        window.localStorage.timeOffset = value;\n        setChosenOffsetImpl(value);\n    }\n    const systemTimeSetting: boolean = booleanOr(window.localStorage.useSystemTime, true);\n    const [chosenSystemTime, setChosenSystemTimeImpl] = React.useState(systemTimeSetting);\n    function setChosenSystemTime(value: boolean) {\n        window.localStorage.useSystemTime = value;\n        setChosenSystemTimeImpl(value);\n    }\n    const twelveHourTimeSetting: boolean = booleanOr(window.localStorage.useTwelveHourTime, false);\n    const [chosenTwelveHourTime, setChosenTwelveHourTimeImpl] = React.useState(twelveHourTimeSetting);\n    function setChosenTwelveHourTime(value: boolean) {\n        window.localStorage.useTwelveHourTime = value;\n        setChosenTwelveHourTimeImpl(value);\n    }\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: chosenIslandName,\n        playerName: chosenName,\n        timeOffset: chosenOffset,\n        useSystemTime: chosenSystemTime,\n        useTwelveHourTime: chosenTwelveHourTime,\n    }\n    const [time, setTime] = React.useState(sentinelDate);\n    if (timeUpdateId) {\n        window.clearInterval(timeUpdateId);\n    }\n    timeUpdateId = window.setInterval(() => setTime(new Date()), 500);\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    const [updateReady, setUpdateReady] = React.useState(false);\n    const [worksOffline, setWorksOffline] = React.useState(false);\n    serviceWorkerRegistration.register({ onUpdate: _ => setUpdateReady(true), onSuccess: _ => setWorksOffline(true) });\n    return <ThemeProvider theme={theme}>\n        <NDContextProvider time={time} settings={settings}>\n            <CssBaseline />\n            <AppFrame theme={chosenTheme} setTheme={setChosenTheme}>\n                <Suspense fallback={<Loading />}>\n                    <Switch>\n                        {/* <Route exact path=\"/\">\n                            Hello world!\n                        </Route> */}\n                        <Route path=\"/critterpedia/:type/:index\" render={({ match }) => {\n                            let type = match.params.type;\n                            let index = valueOr(match.params.index, -1);\n                            if (!(type === 'bug' || type === 'fish') || index < 0 || index > 79) {\n                                return <Redirect to=\"/critterpedia\" />\n                            }\n                            return <Critterpedia load={{ type, index }} />\n                        }}>\n                        </Route>\n                        <Route path=\"/critterpedia\" exact>\n                            <Critterpedia />\n                        </Route>\n                        <Route path=\"/critterpedia\">\n                            <Redirect to=\"/critterpedia\" />\n                        </Route>\n                        <Route path=\"/loading\">\n                            <Loading />\n                        </Route>\n                    </Switch>\n                    {/* <Route page={page} route=\"/\">\n                    <Loading />\n                </Route> */}\n                </Suspense>\n            </AppFrame>\n            <WorksOfflineDialogue open={worksOffline} setOpen={setWorksOffline} />\n            <UpdateReadyDialogue open={updateReady} setOpen={setUpdateReady} />\n        </NDContextProvider>\n    </ThemeProvider>\n}\n\nReactDOM.render(\n    <Suspense fallback={<Loading />}>\n        <BrowserRouter basename={root}>\n            <App />\n        </BrowserRouter>\n    </Suspense>,\n    document.getElementById('root')\n);\nexport { };\n","export type Dict<V> = {\n    [key: string]: V;\n}\nvar _getTextWidthDiv: HTMLDivElement;\nfunction setUpDiv() {\n    _getTextWidthDiv = document.createElement(\"div\");\n    _getTextWidthDiv.style.position = 'absolute';\n    _getTextWidthDiv.style.top = '-9999px';\n    _getTextWidthDiv.style.left = '-9999px';\n    // _getTextWidthDiv.ariaHidden = true;\n    document.body.appendChild(_getTextWidthDiv);\n    return _getTextWidthDiv;\n}\nexport function getTextWidth(text: string) {\n    var div = _getTextWidthDiv ?? (setUpDiv());\n    div.innerText = text\n    return div.clientWidth;\n}\n\nexport const root = '/nookdata_v2';\nexport function valueOr(data: String | undefined, defaultValue: number) {\n    let rv = data ? +data : defaultValue;\n    if (!isNaN(rv)) {\n        return rv;\n    } else {\n        return defaultValue;\n    }\n}\nexport function booleanOr(data: String | undefined, defaultValue: boolean) {\n    switch (data) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            return defaultValue;\n    }\n}\n\n// export function range(start: number, stop: number | undefined = undefined, step: number = 1): Array<number> {\n//     if (stop === undefined) {\n//         stop = start;\n//         start = 0;\n//     }\n//     return Array(\n//         Math.ceil((stop! - start) / step)\n//     ).fill(start).map((x, y) => x + y * step)\n// }\n\nexport function range(stop: number) {\n    return Array.from(Array(stop).keys());\n}","import React, { useContext } from \"react\";\nimport UserSettings from \"./user_settings\";\n\ninterface INDContext {\n    time: Date;\n    settings: UserSettings;\n};\nlet defaultSettings: INDContext = {\n    time: new Date(),\n    settings: {\n        theme: 'dark',\n        hemisphere: 'north',\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n}\nexport const NDContext = React.createContext<INDContext>(defaultSettings);\nexport function NDContextProvider({ time, settings, children }: INDContext & { children: React.ReactElement[] }) {\n    const value = { time, settings };\n    return React.createElement(\n        NDContext.Provider,\n        { value },\n        children,\n    )\n}\nexport function useTime() {\n    const { time } = useContext(NDContext);\n    return time;\n}\nexport function useSettings() {\n    const { settings } = useContext(NDContext);\n    return settings;\n}\nexport function useNDContext() {\n    return useContext(NDContext);\n}\n","declare global {\n    interface String {\n        capitalise: () => String;\n    }\n    interface Array<T> {\n        rotated: (by: number) => Array<T>;\n        rotate: (by: number) => Array<T>;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\nArray.prototype.rotated = function (by: number) {\n    by = by % this.length;\n    return this.slice(by, this.length).concat(this.slice(0, by));\n}\nArray.prototype.rotate = function (by: number) {\n    by = by % this.length;\n    while (this.length && by < 0) by += this.length;\n    this.push.apply(this, this.splice(0, by));\n    return this;\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n"],"sourceRoot":""}