{"version":3,"sources":["pages/critterpedia/index.ts","pages/turnips/index.ts","serviceWorkerRegistration.ts","common_theme_data.ts","dark.ts","light.ts","themes.tsx","App.tsx","i18n.ts","index.tsx","components/AppBar.tsx","components/InfoDialogue.tsx","components/LanguageDialogue.tsx","components/AppFrame.tsx","components/Centred.tsx","components/DrawerAdjust.tsx","components/ListItemLink.tsx","components/Loading.tsx","components/NavigationDrawer.tsx","components/UpdateReadyDialogue.tsx","components/WorksOfflineDialogue.tsx","misc.ts","context.ts","prototype_mods.ts"],"names":["lazy","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","commonProps","MuiTextField","variant","MuiSelect","MuiFormControl","MuiDialogTitle","style","textAlign","theme","createMuiTheme","palette","type","opacity","elevations","0","main","1","2","3","4","6","8","12","16","24","modelled","transparent","winter","contrastText","spring","summer","autumn","primary","secondary","background","paper","default","text","hint","disabled","zIndex","appBar","props","overrides","MuiAppBar","colorPrimary","backgroundColor","color","colorSecondary","colorDefault","MuiDrawer","width","MuiCard","root","borderWidth","borderColor","borderStyle","MuiCardHeader","paddingBottom","MuiListItemIcon","dark","name","light","themes","App","themeSetting","localStorage","React","useState","chosenTheme","setChosenThemeImpl","nameSetting","playerName","chosenName","islandNameSetting","islandName","chosenIslandName","hemisphereSetting","hemisphere","chosenHemisphere","offsetSetting","valueOr","timeOffset","chosenOffset","systemTimeSetting","booleanOr","useSystemTime","chosenSystemTime","twelveHourTimeSetting","useTwelveHourTime","chosenTwelveHourTime","settings","useMemo","getTheme","updateReady","setUpdateReady","worksOffline","setWorksOffline","serviceWorkerRegistration","_","ThemeProvider","CssBaseline","setTheme","value","document","body","classList","add","setTimeout","remove","fallback","path","render","params","index","to","load","exact","open","setOpen","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","supportedLngs","ns","defaultNS","ReactDOM","basename","getElementById","AppBar","position","Toolbar","IconButton","edge","aria-label","marginRight","onClick","setDrawerOpen","drawerOpen","flexGrow","title","gitInfo","InfoDialogue","t","useTranslation","useTheme","Dialog","onClose","DialogTitle","DialogContent","Trans","i18nKey","commit","hash","textUnderlineOffset","gitRevision","shortHash","DialogActions","Button","LanguageDialogue","aria-labelledby","PaperProps","id","List","ListItem","button","setLang","ListItemText","pageData","icon","EmojiNature","initialRenders","AppFrame","startOpen","useMediaQuery","breakpoints","up","langOpen","setLangOpen","infoOpen","setInfoOpen","newTheme","Typography","display","Object","entries","map","route","data","ListItemLink","ListItemIcon","Info","Language","changeLanguage","DrawerAdjust","active","children","Centred","className","matches","paddingLeft","transition","renderLink","forwardRef","itemProps","ref","activeClassName","component","Loading","autoPlay","loop","muted","playsInline","src","NavigationDrawer","container","undefined","Hidden","smUp","Drawer","anchor","direction","xsDown","UpdateReadyDialogue","WorksOfflineDialogue","_getTextWidthDiv","zip","getTextWidth","div","createElement","top","left","appendChild","innerText","clientWidth","getDefault","defaultValue","JSON","parse","rv","isNaN","range","stop","Array","from","keys","clone","obj","stringify","arrays","length","i","arr","reduce","minLength","nextArr","len","Math","min","Infinity","interval","defaultSettings","time","Date","NDContext","createContext","NDContextProvider","updateTime","setState","defaultProps","setInterval","this","clearInterval","Provider","PureComponent","useNDContext","useContext","String","prototype","capitalise","charAt","toUpperCase","slice","rotated","by","concat","rotate","push","apply","splice"],"mappings":"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","file":"static/js/main.02c7509b.chunk.js","sourcesContent":["import { lazy } from 'react';\nexport default lazy(() => import('./page'));","import { lazy } from 'react';\nexport default lazy(() => import('./page'));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","import { ComponentsProps } from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n    MuiDialogTitle: {\n        style: { textAlign: 'center' },\n    }\n};\nexport { commonProps };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n\n// Dark theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: { main: '#1e1e1e' },\n            1: { main: '#292929' },\n            2: { main: '#2e2e2e' },\n            3: { main: '#303030' },\n            4: { main: '#323232' },\n            6: { main: '#373737' },\n            8: { main: '#393939' },\n            12: { main: '#3e3e3e' },\n            16: { main: '#404040' },\n            24: { main: '#424242' },\n        },\n        modelled: {\n            main: 'gold',\n            transparent: 'rgba(255, 215, 0, 0.3)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.3)',\n            contrastText: 'rgba(0,0,0,87%)'\n        },\n        primary: {\n            main: '#bb86fc',\n            contrastText: 'rgba(0,0,0,87%)',\n            transparent: 'rgba(187, 134, 252, 0.3)',\n        },\n        secondary: {\n            main: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n            transparent: 'rgba(207, 102, 121, 0.3)',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { commonProps } from './common_theme_data';\nimport './prototype_mods';\n\n// Normal or default theme\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: { main: '#ffffff' },\n            1: { main: '#ffffff' },\n            2: { main: '#ffffff' },\n            3: { main: '#ffffff' },\n            4: { main: '#ffffff' },\n            6: { main: '#ffffff' },\n            8: { main: '#ffffff' },\n            12: { main: '#ffffff' },\n            16: { main: '#ffffff' },\n            24: { main: '#ffffff' },\n        },\n        modelled: {\n            main: '#fbc02d',\n            transparent: 'rgba(251, 192, 45, 0.5)',\n        },\n        winter: {\n            main: '#3c84c6',\n            transparent: 'rgba(60, 132, 198, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        spring: {\n            main: '#38761c',\n            transparent: 'rgba(56, 118, 28, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        summer: {\n            main: '#e69038',\n            transparent: 'rgba(230, 144, 56, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        autumn: {\n            main: '#b45f04',\n            transparent: 'rgba(180, 95, 4, 0.6)',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        primary: {\n            main: '#6200ee',\n            contrastText: 'rgba(255,255,255,87%)',\n            transparent: 'rgba(98, 0, 238, 0.5)',\n        },\n        secondary: {\n            main: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n            transparent: 'rgba(176, 0, 32, 0.5)',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\ndark.name = 'dark';\nlight.name = 'light';\n\nconst themes = {\n    light,\n    dark,\n}\n\nexport type ThemeName = keyof typeof themes;\n\nexport default function getTheme(theme: ThemeName) {\n    return themes[theme];\n}","import { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { AppFrame, Loading, UpdateReadyDialogue, WorksOfflineDialogue } from './components';\nimport { NDContextProvider } from './context';\nimport { booleanOr, valueOr } from './misc';\nimport { Critterpedia, Turnips } from './pages';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport getTheme, { ThemeName } from './themes';\nimport UserSettings from './user_settings';\n\nexport function App() {\n    const themeSetting: ThemeName = window.localStorage.theme || 'dark';\n    const [chosenTheme, setChosenThemeImpl] = React.useState<'dark' | 'light'>(themeSetting);\n    function setChosenTheme(value: 'dark' | 'light') {\n        window.localStorage.theme = value;\n        document.body.classList.add(\"no-transition\");\n        setChosenThemeImpl(value);\n        // document.body.classList.remove(\"no-transition\");\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 10);\n    }\n    const nameSetting: string = window.localStorage.playerName || 'PLAYER';\n    const [chosenName, setChosenNameImpl] = React.useState(nameSetting);\n    function setChosenName(value: string) {\n        window.localStorage.playerName = value;\n        setChosenNameImpl(value);\n    }\n    const islandNameSetting: string = window.localStorage.islandName || 'ISLAND';\n    const [chosenIslandName, setChosenIslandNameImpl] = React.useState(islandNameSetting);\n    function setChosenIslandName(value: string) {\n        window.localStorage.islandName = value;\n        setChosenIslandNameImpl(value);\n    }\n    const hemisphereSetting: \"north\" | \"south\" = window.localStorage.hemisphere || 'north';\n    const [chosenHemisphere, setChosenHemisphereImpl] = React.useState<'north' | 'south'>(hemisphereSetting);\n    function setChosenHemisphere(value: 'north' | 'south') {\n        window.localStorage.hemisphere = value;\n        setChosenHemisphereImpl(value);\n    }\n    const offsetSetting: number = valueOr(window.localStorage.timeOffset, 0);\n    const [chosenOffset, setChosenOffsetImpl] = React.useState(offsetSetting);\n    function setChosenOffset(value: number) {\n        window.localStorage.timeOffset = value;\n        setChosenOffsetImpl(value);\n    }\n    const systemTimeSetting: boolean = booleanOr(window.localStorage.useSystemTime, true);\n    const [chosenSystemTime, setChosenSystemTimeImpl] = React.useState(systemTimeSetting);\n    function setChosenSystemTime(value: boolean) {\n        window.localStorage.useSystemTime = value;\n        setChosenSystemTimeImpl(value);\n    }\n    const twelveHourTimeSetting: boolean = booleanOr(window.localStorage.useTwelveHourTime, false);\n    const [chosenTwelveHourTime, setChosenTwelveHourTimeImpl] = React.useState(twelveHourTimeSetting);\n    function setChosenTwelveHourTime(value: boolean) {\n        window.localStorage.useTwelveHourTime = value;\n        setChosenTwelveHourTimeImpl(value);\n    }\n    const settings: UserSettings = {\n        theme: chosenTheme,\n        hemisphere: chosenHemisphere,\n        islandName: chosenIslandName,\n        playerName: chosenName,\n        timeOffset: chosenOffset,\n        useSystemTime: chosenSystemTime,\n        useTwelveHourTime: chosenTwelveHourTime,\n    };\n    const theme = React.useMemo(\n        () => getTheme(chosenTheme),\n        [chosenTheme]\n    );\n    const [updateReady, setUpdateReady] = React.useState(false);\n    const [worksOffline, setWorksOffline] = React.useState(false);\n    serviceWorkerRegistration.register({ onUpdate: _ => setUpdateReady(true), onSuccess: _ => setWorksOffline(true) });\n    console.log(chosenTheme);\n    return <ThemeProvider theme={theme}>\n        <NDContextProvider settings={settings}>\n            <CssBaseline />\n            <AppFrame setTheme={setChosenTheme}>\n                <Suspense fallback={<Loading />}>\n                    <Switch>\n                        <Route path=\"/critterpedia/:type/:index\" render={({ match }) => {\n                            let type = match.params.type;\n                            let index = valueOr(match.params.index, -1);\n                            if (!(type === 'bug' || type === 'fish') || index < 0 || index > 79) {\n                                return <Redirect to=\"/critterpedia\" />;\n                            }\n                            return <Critterpedia load={{ type, index }} />;\n                        }}>\n                        </Route>\n                        <Route path=\"/critterpedia\" exact>\n                            <Critterpedia />\n                        </Route>\n                        <Route path=\"/critterpedia\">\n                            <Redirect to=\"/critterpedia\" />\n                        </Route>\n                        <Route path=\"/turnips\">\n                            <Turnips />\n                        </Route>\n                        <Route path=\"/loading\">\n                            <Loading />\n                        </Route>\n                    </Switch>\n                </Suspense>\n            </AppFrame>\n            <WorksOfflineDialogue open={worksOffline} setOpen={setWorksOffline} />\n            <UpdateReadyDialogue open={updateReady} setOpen={setUpdateReady} />\n        </NDContextProvider>\n    </ThemeProvider>;\n}\n","\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: { loadPath: '/nookdata_v2/assets/i18n/{{lng}}/{{ns}}.json' },\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV == 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        supportedLngs: [\n            'en',\n            'fr',\n        ],\n        ns: 'core',\n        defaultNS: 'core',\n    });","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { Loading } from './components';\nimport './i18n';\nimport './index.scss';\nimport { root } from './misc';\n\nif (process.env.NODE_ENV !== 'production') {\n    const { whyDidYouUpdate } = require('why-did-you-update');\n    // whyDidYouUpdate(React);\n}\n\nReactDOM.render(\n    <Suspense fallback={<Loading />}>\n        <BrowserRouter basename={root}>\n            <App />\n        </BrowserRouter>\n    </Suspense>,\n    document.getElementById('root')\n);\nexport { };\n","import { AppBar as TopAppBar, IconButton, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\n\n\ninterface AppBarProps {\n    setDrawerOpen: (value: boolean) => void,\n    drawerOpen: boolean,\n    title: React.ReactNode,\n}\n\nfunction AppBar(props: AppBarProps) {\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{ marginRight: 16 }}\n                        onClick={() => props.setDrawerOpen(!props.drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <div style={{ flexGrow: 1 }}>\n                        {props.title}\n                    </div>\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n        </>\n    )\n}\nexport default AppBar;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport GitInfo from 'react-git-info/macro';\nimport { Trans, useTranslation } from 'react-i18next';\n\nconst gitInfo = GitInfo();\n\ninterface InfoDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function InfoDialogue(props: InfoDialogueProps) {\n    const { t } = useTranslation('core');\n    const theme = useTheme();\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>\n            {t('core:info.title')}\n        </DialogTitle>\n        <DialogContent>\n            <Trans i18nKey=\"core:info.description\" t={t}>\n                You are currently viewing NookData revision\n                <a href={`https://github.com/Starwort/nookdata_v2/commit/${gitInfo.commit.hash}`} style={{ color: theme.palette.primary.main, textUnderlineOffset: 2 }}>\n                    {{ gitRevision: gitInfo.commit.shortHash }}\n                </a>\n            </Trans>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => props.setOpen(false)}>\n                {t('core:ui.dismiss')}\n            </Button>\n        </DialogActions>\n    </Dialog>\n}","import { Dialog, DialogTitle, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LanguageDialogueProps {\n    open: boolean;\n    setLang: (lang: string) => void;\n}\n\nexport default function LanguageDialogue(props: LanguageDialogueProps) {\n    const { t } = useTranslation('core');\n    return <Dialog aria-labelledby=\"lang-dialogue-title\" open={props.open} PaperProps={{ style: { width: 250 } }}>\n        <DialogTitle style={{ textAlign: 'center' }} id=\"lang-dialogue-title\">{t('core:lang.choose')}</DialogTitle>\n        <List>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('en')}>\n                <ListItemText primary={t('core:lang.en')} />\n            </ListItem>\n            <ListItem style={{ textAlign: 'center' }} button onClick={() => props.setLang('fr')}>\n                <ListItemText primary={t('core:lang.fr')} />\n            </ListItem>\n        </List>\n    </Dialog>;\n}","import { List, ListItem, ListItemIcon, ListItemText, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport { EmojiNature, Info, Language } from '@material-ui/icons';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AppBar, DrawerAdjust, ListItemLink, NavigationDrawer } from '.';\nimport { Dict } from '../misc';\nimport { ThemeName } from '../themes';\nimport InfoDialogue from './InfoDialogue';\nimport LanguageDialogue from './LanguageDialogue';\n\ninterface PageData {\n    title: string;\n    icon: React.ReactNode;\n}\nexport const pageData: Dict<PageData> = {\n    '/critterpedia': {\n        title: 'core:pages.critterpedia',\n        icon: <EmojiNature />,\n    },\n    // '/turnips': {\n    //     title: 'core:pages.turnips',\n    //     icon: <ShowChart />,\n    // },\n}\n\ninterface AppFrameProps {\n    setTheme: (value: ThemeName) => void;\n    children: React.ReactNode;\n}\nlet initialRenders = 10;\nexport default function AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    if (initialRenders) {\n        console.log(initialRenders, startOpen)\n        if (startOpen && !drawerOpen) {\n            initialRenders = 0;\n            setDrawerOpen(true);\n        } else {\n            initialRenders--;\n        }\n    }\n    const { t, i18n } = useTranslation('core');\n    const [langOpen, setLangOpen] = React.useState(false);\n    const [infoOpen, setInfoOpen] = React.useState(false);\n    const newTheme: ThemeName = theme.name === 'dark' ? 'light' : 'dark';\n    return (\n        <>\n            <AppBar setDrawerOpen={setDrawerOpen} drawerOpen={drawerOpen} title={<Typography variant=\"h6\">\n                <div\n                    style={{\n                        color: theme.palette.winter.main,\n                        display: 'inline'\n                    }}>{t('title.a')}</div>\n                <div\n                    style={{\n                        color: theme.palette.summer.main,\n                        display: 'inline'\n                    }}>{t('title.b')}</div>\n            </Typography>} />\n            <NavigationDrawer open={drawerOpen} setOpen={setDrawerOpen}>\n                <List>\n                    {Object.entries(pageData).map(([route, data]) => (\n                        <ListItemLink to={route} icon={data.icon} primary={t(data.title)} />\n                    ))}\n                </List>\n                <div style={{ flexGrow: 1 }} />\n                <ListItem button onClick={() => setInfoOpen(true)}>\n                    <ListItemIcon>\n                        <Info />\n                    </ListItemIcon>\n                    <ListItemText primary={t('core:sidebar.about')} />\n                </ListItem>\n                <ListItem button onClick={() => setLangOpen(true)}>\n                    <ListItemIcon>\n                        <Language />\n                    </ListItemIcon>\n                    <ListItemText primary={t('core:sidebar.lang')} />\n                </ListItem>\n                <ListItem button onClick={() => props.setTheme(newTheme)}>\n                    <ListItemIcon>\n                        {\n                            newTheme === 'dark'\n                                ? <DarkModeIcon />\n                                : <LightModeIcon />\n                        }\n                    </ListItemIcon>\n                    <ListItemText primary={t('core:sidebar.theme')} />\n                </ListItem>\n            </NavigationDrawer>\n            <LanguageDialogue open={langOpen} setLang={(value: string) => {\n                i18n.changeLanguage(value);\n                setLangOpen(false);\n            }} />\n            <InfoDialogue open={infoOpen} setOpen={setInfoOpen} />\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    );\n}\n","import React from 'react';\nimport './Centred.scss';\ninterface CentredProps {\n    children: React.ReactNode;\n}\nexport default function Centred(props: CentredProps) {\n    return <div className=\"centred\">\n        {props.children}\n    </div>;\n}","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\n\ninterface DrawerAdjustProps {\n    active: boolean;\n    children: React.ReactNode;\n}\nexport default function DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{ paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms' }}>\n            {props.children}\n        </div>\n    );\n}\n","import { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport React from 'react';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\ninterface ListItemLinkProps {\n    icon?: React.ReactNode;\n    primary: string;\n    to: string;\n    exact?: boolean;\n}\nexport default function ListItemLink(props: ListItemLinkProps) {\n    const { icon, primary, to, exact } = props;\n    const renderLink = React.useMemo(\n        () => React.forwardRef<any, Omit<NavLinkProps, 'to'>>((itemProps, ref) => (\n            <NavLink to={to} ref={ref} {...itemProps} activeClassName=\"Mui-selected\" exact={exact} />\n        )),\n        [to]\n    );\n    return <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n    </ListItem>;\n}\n","import { useTheme } from '@material-ui/core';\nimport React from 'react';\nimport './Loading.scss';\nexport default function Loading() {\n    const theme = useTheme();\n    return <video autoPlay loop muted playsInline className={`loader ${theme.name}`}>\n        <source src=\"assets/shared/loading.gif.webm\" type=\"video/webm\" />\n        <source src=\"assets/shared/loading.gif.mp4\" type=\"video/mp4\" />\n    </video>;\n}","import { Drawer, Hidden, Toolbar, useTheme } from '@material-ui/core';\nimport React from 'react';\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nfunction NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                {props.children}\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                {props.children}\n            </Drawer>\n        </Hidden>\n    </>;\n}\nexport default NavigationDrawer;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface UpdateReadyDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function UpdateReadyDialogue(props: UpdateReadyDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_update.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_update.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:ui.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\ninterface WorksOfflineDialogueProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n}\n\nexport default function WorksOfflineDialogue(props: WorksOfflineDialogueProps) {\n    const { t } = useTranslation(['service', 'core']);\n    return <Dialog open={props.open} onClose={() => props.setOpen(false)}>\n        <DialogTitle>{t('service:available_offline.title')}</DialogTitle>\n        <DialogContent>\n            {t('service:available_offline.content')}\n        </DialogContent>\n        <DialogActions>\n            <Button variant=\"text\" onClick={() => props.setOpen(false)}>{t('core:ui.dismiss')}</Button>\n        </DialogActions>\n    </Dialog>\n}","export type Dict<V> = {\n    [key: string]: V;\n}\nvar _getTextWidthDiv: HTMLDivElement;\nfunction setUpDiv() {\n    _getTextWidthDiv = document.createElement(\"div\");\n    _getTextWidthDiv.style.position = 'absolute';\n    _getTextWidthDiv.style.top = '-9999px';\n    _getTextWidthDiv.style.left = '-9999px';\n    // _getTextWidthDiv.ariaHidden = true;\n    document.body.appendChild(_getTextWidthDiv);\n    return _getTextWidthDiv;\n}\nexport function getTextWidth(text: string) {\n    var div = _getTextWidthDiv ?? (setUpDiv());\n    div.innerText = text\n    return div.clientWidth;\n}\n\nexport const root = '/nookdata_v2';\nexport function getDefault<T>(data: string | undefined, defaultValue: T) {\n    if (data !== undefined) {\n        return JSON.parse(data) as T;  // todo: figure out how to type-check this\n    } else {\n        return defaultValue;\n    }\n}\nexport function valueOr(data: String | undefined, defaultValue: number) {\n    let rv = data ? +data : defaultValue;\n    if (!isNaN(rv)) {\n        return rv;\n    } else {\n        return defaultValue;\n    }\n}\nexport function booleanOr(data: String | undefined, defaultValue: boolean) {\n    switch (data) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            return defaultValue;\n    }\n}\n\n// export function range(start: number, stop: number | undefined = undefined, step: number = 1): Array<number> {\n//     if (stop === undefined) {\n//         stop = start;\n//         start = 0;\n//     }\n//     return Array(\n//         Math.ceil((stop! - start) / step)\n//     ).fill(start).map((x, y) => x + y * step)\n// }\n\nexport function range(stop: number) {\n    return Array.from(Array(stop).keys());\n}\nexport type DeepPartial<T> = {\n    [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];\n};\nexport function clone<T>(obj: T): T {\n    return JSON.parse(JSON.stringify(obj));\n}\nexport type Tuple<T extends unknown[]> = [...T];\nexport type SoA<T extends unknown[]> = { [I in keyof T]: T[I][] };\nexport function* zip<T extends unknown[]>(...arrays: SoA<T>) {\n    if (arrays.length < 1) {\n        return;\n    }\n    for (let i = 0; i < arrays.reduce((minLength, nextArr) => {\n        let len = nextArr.length;\n        return Math.min(minLength, len);\n    }, Infinity); i++) {\n        yield arrays.map((arr) => arr[i]) as Tuple<T>;\n    }\n}\n\nexport type Filter<T, V> = {\n    [P in keyof T]: T[P] extends V ? never : T[P];\n}\n","import React, { useContext } from \"react\";\nimport UserSettings from \"./user_settings\";\n\n\ninterface INDContext {\n    time: Date;\n    settings: UserSettings;\n};\nconst defaultSettings: INDContext = {\n    time: new Date(),\n    settings: {\n        theme: 'dark',\n        hemisphere: 'north',\n        islandName: 'Gloverboia',\n        playerName: 'Starwort',\n        timeOffset: 0,\n        useSystemTime: true,\n        useTwelveHourTime: true,\n    }\n};\nlet interval: number | undefined;\nexport const NDContext = React.createContext<INDContext>(defaultSettings);\nexport class NDContextProvider extends React.PureComponent<{ interval?: number, settings: UserSettings, children: React.ReactNode }> {\n    static defaultProps = {\n        interval: 500,\n    };\n\n    interval: number;\n    children: React.ReactNode;\n\n    constructor({ interval, settings, children }: { interval?: number, settings: UserSettings, children: React.ReactNode }) {\n        super({ interval, settings, children });\n        this.interval = interval ? interval : NDContextProvider.defaultProps.interval;\n        this.children = children;\n        this.setState({\n            time: new Date(),\n            settings\n        });\n    }\n\n    // start with the current time in state\n    state = defaultSettings;\n\n    componentDidMount() {\n        // on mount, we set up a timer to update our cached time based on\n        // the interval prop.\n        interval = window.setInterval(this.updateTime, this.interval);\n    }\n\n    componentWillUnmount() {\n        // don't forget to clean up after ourselves!\n        if (interval) {\n            window.clearInterval(interval);\n        }\n    }\n\n    updateTime = () => {\n        this.setState(() => ({\n            time: new Date(),\n        }));\n    };\n\n    render() {\n        return React.createElement(\n            NDContext.Provider,\n            { value: this.state },\n            this.children,\n        )\n    }\n};\n\n// export function NDContextProvider({ time, settings, children }: INDContext & { children: React.ReactElement[] }) {\n//     const value = { time, settings };\n//     return React.createElement(\n//         NDContext.Provider,\n//         { value },\n//         children,\n//     )\n// }\nexport function useTime() {\n    const { time } = useContext(NDContext);\n    return time;\n}\nexport function useSettings() {\n    const { settings } = useContext(NDContext);\n    return settings;\n}\nexport function useNDContext() {\n    return useContext(NDContext);\n}\n","import { ThemeName } from \"./themes\";\n\ndeclare global {\n    interface String {\n        capitalise: () => String;\n    }\n    interface Array<T> {\n        rotated: (by: number) => Array<T>;\n        rotate: (by: number) => Array<T>;\n    }\n}\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\nArray.prototype.rotated = function (by: number) {\n    by = by % this.length;\n    return this.slice(by, this.length).concat(this.slice(0, by));\n}\nArray.prototype.rotate = function (by: number) {\n    by = by % this.length;\n    while (this.length && by < 0) by += this.length;\n    this.push.apply(this, this.splice(0, by));\n    return this;\n}\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n    interface Theme {\n        name: ThemeName;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColour {\n        0: { main: string };\n        1: { main: string };\n        2: { main: string };\n        3: { main: string };\n        4: { main: string };\n        6: { main: string };\n        8: { main: string };\n        12: { main: string };\n        16: { main: string };\n        24: { main: string };\n    }\n    interface PaletteColor {\n        transparent?: string;\n    }\n    interface SimplePaletteColorOptions {\n        transparent?: string;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: Palette['primary'];\n        spring: Palette['primary'];\n        summer: Palette['primary'];\n        autumn: Palette['primary'];\n        winter: Palette['primary'];\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n        modelled: PaletteOptions['primary'];\n        spring: PaletteOptions['primary'];\n        summer: PaletteOptions['primary'];\n        autumn: PaletteOptions['primary'];\n        winter: PaletteOptions['primary'];\n    }\n}\nexport { };\n"],"sourceRoot":""}